{"version":3,"sources":["../node_modules/react/index.js","../node_modules/global/window.js","../node_modules/global/document.js","../node_modules/keycode/index.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/esm/history.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/mux.js/lib/utils/stream.js","../node_modules/mux.js/lib/mp4/probe.js","../node_modules/mini-create-react-context/dist/esm/index.js","../node_modules/react-router/esm/react-router.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/prop-types/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/webpack/buildin/global.js","../node_modules/mux.js/lib/m2ts/stream-types.js","../node_modules/pannellum-react/es/elements/Pannellum.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/pkcs7/dist/pkcs7.es.js","../node_modules/aes-decrypter/dist/aes-decrypter.es.js","../node_modules/video.js/dist/video.es.js","../node_modules/pannellum-react/es/elements/PannellumVideo.js","../node_modules/pannellum-react/es/pannellum/js/videojs-pannellum-plugin.js","../node_modules/pannellum-react/es/index.js","../node_modules/tsml/tsml.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/function-bind/index.js","../node_modules/is-callable/index.js","../node_modules/mux.js/lib/mp4/transmuxer.js","../node_modules/mux.js/lib/aac/utils.js","../node_modules/xhr/index.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/react-router/node_modules/path-to-regexp/index.js","../node_modules/object-assign/index.js","../node_modules/pannellum-react/es/pannellum/js/libpannellum.js","../node_modules/pannellum-react/es/pannellum/js/pannellum.js","../node_modules/pannellum-react/es/pannellum/js/RequestAnimationFrame.js","../node_modules/define-properties/index.js","../node_modules/object-keys/isArguments.js","../node_modules/string.prototype.trim/implementation.js","../node_modules/es-abstract/GetIntrinsic.js","../node_modules/has/src/index.js","../node_modules/string.prototype.trim/polyfill.js","../node_modules/mux.js/lib/mp4/mp4-generator.js","../node_modules/mux.js/lib/m2ts/caption-stream.js","../node_modules/mux.js/lib/tools/caption-packet-parser.js","../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","../node_modules/react-is/index.js","../node_modules/react-dom/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/mux.js/lib/mp4/index.js","../node_modules/mux.js/lib/tools/ts-inspector.js","../node_modules/react-router-dom/esm/react-router-dom.js","../node_modules/gud/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/string.prototype.trim/index.js","../node_modules/function-bind/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/implementation.js","../node_modules/es-abstract/es5.js","../node_modules/es-abstract/helpers/assertRecord.js","../node_modules/es-abstract/helpers/isNaN.js","../node_modules/es-abstract/helpers/isFinite.js","../node_modules/es-abstract/helpers/sign.js","../node_modules/es-abstract/helpers/mod.js","../node_modules/es-to-primitive/es5.js","../node_modules/es-to-primitive/helpers/isPrimitive.js","../node_modules/string.prototype.trim/shim.js","../node_modules/for-each/index.js","../node_modules/xtend/immutable.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/mux.js/lib/utils/bin.js","../node_modules/mux.js/lib/mp4/frame-utils.js","../node_modules/mux.js/lib/mp4/audio-frame-utils.js","../node_modules/mux.js/lib/data/silence.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/mp4/track-decode-info.js","../node_modules/mux.js/lib/m2ts/m2ts.js","../node_modules/mux.js/lib/m2ts/metadata-stream.js","../node_modules/mux.js/lib/codecs/adts.js","../node_modules/mux.js/lib/codecs/h264.js","../node_modules/mux.js/lib/utils/exp-golomb.js","../node_modules/mux.js/lib/aac/index.js","../node_modules/mux.js/lib/mp4/caption-parser.js","../node_modules/mux.js/lib/tools/mp4-inspector.js","../node_modules/mux.js/lib/m2ts/probe.js","../node_modules/react-router/node_modules/isarray/index.js","../node_modules/react-is/cjs/react-is.production.min.js"],"names":["module","exports","__webpack_require__","global","win","window","self","doccy","topLevel","minDoc","document","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","String","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","event","nameOrCode","undefined","code","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","end","home","left","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","i","fromCharCode","title","alias","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","d","__webpack_exports__","isProduction","prefix","condition","message","Error","isAbsolute","pathname","charAt","spliceOne","list","index","k","n","pop","resolve_pathname","to","from","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","hasTrailingSlash","last","part","unshift","result","join","substr","_typeof","Symbol","iterator","obj","constructor","value_equal","valueEqual","a","b","Array","isArray","every","item","aType","aValue","valueOf","bValue","aKeys","keys","bKeys","addLeadingSlash","path","stripLeadingSlash","stripBasename","RegExp","test","hasBasename","stripTrailingSlash","slice","createPath","location","hash","createLocation","state","currentLocation","hashIndex","indexOf","searchIndex","parsePath","esm_extends","decodeURI","e","URIError","locationsAreEqual","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","fn","isActive","listener","push","filter","notifyListeners","_len","args","_key","forEach","createBrowserHistory","createHashHistory","createMemoryHistory","canUseDOM","createElement","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","props","tiny_invariant_esm","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","toString","transitionManager","setState","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replace","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","substring","replaceHashPath","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","map","entry","nextIndex","nextEntries","splice","canGo","_inheritsLoose","subClass","superClass","create","__proto__","Stream","init","on","type","off","trigger","callbacks","dispose","pipe","destination","data","flushSource","flush","_findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","size","subresults","results","byteLength","subarray","buffer","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","traf","tfhd","scale","tfdt","pow","Infinity","isFinite","traks","videoTrackIds","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","findBox","MAX_SIGNED_31_BIT_INT","esm","react_default","createContext","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","gud_default","Provider","_Component","_this","emitter","value","handlers","handler","h","get","set","newValue","changedBits","createEventEmitter","inheritsLoose_default","_proto","getChildContext","componentWillReceiveProps","nextProps","oldValue","x","y","render","children","react","childContextTypes","prop_types_default","object","isRequired","Consumer","_Component2","_this2","getValue","onUpdate","observedBits","_proto2","componentDidMount","context","componentWillUnmount","contextTypes","Redirect","react_router_Route","react_router_Router","matchPath","react_router_context","name","displayName","react_router_createNamedContext","_React$Component","Router","_isMounted","_pendingLocation","staticContext","esm_inheritsLoose","computeRootMatch","url","params","isExact","match","Component","react_router_Lifecycle","Lifecycle","onMount","componentDidUpdate","prevProps","onUnmount","cache","cacheLimit","cacheCount","generatePath","generator","path_to_regexp_default","compile","compilePath","pretty","computedMatch","_ref$push","context$$1","method","esm_history","cache$1","cacheLimit$1","cacheCount$1","options","_options","_options$exact","exact","_options$strict","strict","_options$sensitive","sensitive","matched","_compilePath","cacheKey","pathCache","regexp","compilePath$1","exec","values","memo","Route","_this$props","component","Children","count","isEmptyChildren","base","createURL","staticHandler","methodName","noop","_defineProperty","defineProperty","enumerable","configurable","writable","_objectSpread","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_typeof2","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","_objectWithoutPropertiesLoose","excluded","sourceKeys","g","Function","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","_class","_temp","Pannellum_Pannellum","_PureComponent","Pannellum","renderImage","hotspots","hotspotArray","hotspot","pitch","yaw","text","URL","cssClass","createTooltipFunc","tooltip","hotspotTooltip","createTooltipArgs","tooltipArg","clickHandlerFunc","handleClick","handleClickHotspot","clickHandlerArgs","handleClickArg","jsonConfig","panorama","image","hfov","minHfov","maxHfov","minPitch","maxPitch","minYaw","maxYaw","autoRotate","compass","preview","previewTitle","previewAuthor","author","autoLoad","orientationOnByDefault","showZoomCtrl","keyboardZoom","mouseZoom","draggable","showFullscreenCtrl","showControls","hotSpotDebug","hotspotDebug","hotSpots","destroy","pannellum","viewer","onLoad","onScenechange","onScenechangefadedone","onError","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","console","log","hotSpotDiv","setAttribute","hDiv","classList","add","outDiv","inDiv","appendChild","getViewer","forceRender","prevState","snapshot","width","height","setYawBounds","setPitchBounds","setHfovBounds","setYaw","setPitch","setHfov","divStyle","style","ref","node","imageNode","defaultProps","propTypes","Hotspot","elements_Pannellum","LineStream","_Stream","nextNewline","parseAttributes","attributes","attr","attrs","ParseStream","customParsers","tagMappers","line","trim","acc","mapper","mappedLine","newLine","tagType","duration","parseFloat","parseInt","number","playlistType","offset","allowed","URI","uri","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","addParser","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","Parser","lineStream","parseStream","currentMap","uris","currentUri","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","segments","mediaGroup","rendition","tag","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","start","isNaN","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","chunk","classCallCheck","createClass","defineProperties","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","s","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","inherits","processJob_","setTimeout","bind","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","padded","bytes","video_es_version","video_es_inheritsLoose","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","level","lvl","levels","lvlRegExp","toUpperCase","window_default","info","video_es_log","createLogger","logByType","subname","all","debug","warn","error","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","isObject","each","video_es_assign","sources","isPlain","video_es_computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","querySelector","ctx","createEl","tagName","properties","content","getOwnPropertyNames","propName","val","tsml_default","textContent","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","hasClass","element","classToCheck","contains","className","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","findPosition","box","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","_supportsPassive","opts","passiveEvents","guid","handlersCopy","m","passive","attachEvent","removeType","t","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","EVENT_MAP","video_es_createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","now","video_es_debounce","immediate","timeout","debounced","_later","clearTimeout","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","isEvented","eventBusEl_","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","video_es_Component","ready","play","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","prefixedAPI","video_es_i","dist_video_es_i","MediaError","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","keycode_default","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","cors","xhr_default","err","response","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","gm","gh","implementation","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundHandleKeyPress_","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","catch","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","fsApi","fullscreenElement","matches","fullscreen","inactivityTimeout","defaultPlaybackRate","set$1","reduceRight","video_es_get","_this8","PromiseClass","Promise","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","xhr","dom","video_es_resolveUrl","baseURL","relativeURL","url_toolkit_default","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","arr","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","withCredentials","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","customParser","media_","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","abort","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","initSegment","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","frame","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","toUnsigned$1","probe","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","nalUnitType","currentGop","gops","nalCount","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","timestamp","sampleRate","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","parsePes","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","byteIndex","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","inspectMp4","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","nals","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","Uint16Array","mp4Inspector","inspect","ab","z","textify","inspectedMp4","indent","_byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","mediaRequest_","mpd_parser_es","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","stats","progressEvent","loaded","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","responseType","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","segmentInfo","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","PannellumVideo_class","PannellumVideo_temp","video_es","vid","pnlmContainer","dynamic","visibility","pnlmViewer","display","setUpdate","PannellumVideo_PannellumVideo","PannellumVideo","PannellumVideo_classCallCheck","PannellumVideo_possibleConstructorReturn","renderVideo","videoNode","cuurentHS","getConfig","hs","removeHotSpot","addHotSpot","PannellumVideo_inherits","data-vjs-player","clean","sa","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","fnToStr","constructorRegex","isES6ClassFn","fnStr","toStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","AdtsStream","AacStream","isLikelyAacData","collectDtsInfo","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","prefixWithSilence","generateSampleTable","concatenateFrameData","clearDtsInfo","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","concatenateNalData","parseId3TagSize","parseAdtsSize","parseSampleRate","parseAacTimestamp","isFunction","parseHeaders","xtend","initParams","createXHR","_createXHR","called","getBody","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onprogress","onabort","ontimeout","username","password","setRequestHeader","isEmpty","beforeSend","send","forEachArray","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","parts","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","merge","objects","flatten","lists","mergeDiscontiguousPlaylists","_acc$name$segments","lang","formatAudioPlaylist","_attributes","periodIndex","formatVttPlaylist","_attributes2","baseUrl","sourceDuration","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","subs","organizeVttPlaylists","urlToolkit","resolveUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","isarray","pathToRegexp","tokensToFunction","tokensToRegExp","PATH_REGEXP","res","defaultDelimiter","delimiter","escaped","capture","modifier","asterisk","partial","optional","pattern","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","encode","encodeURIComponent","token","attachKeys","re","route","endsWithDelimiter","regexpToRegexp","arrayToRegexp","stringToRegexp","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","libpannellum","Renderer","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","imageType","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","canvas","multiresNodeSort","multiresNodeRenderSort","MultiresNode","vertices","side","testMultiresNode","rotPersp","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","theta","asin","atan2","PI","acos","sin","cos","inCurrent","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","cubeResolution","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","f","ntmp","f1","f2","f3","i1","i2","i3","fullpath","rotateMatrix","angle","axis","transposeMatrix4","_image","_imageType","_dynamic","haov","vaov","voffset","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundSquare","ImageData","getContext","alpha","getError","handleWebGLError1286","appVersion","basePath","fallbackPath","sides","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","Image","extension","maxWidth","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","horizonPitch","horizonRoll","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","clearColor","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","getUniformLocation","uniform1f","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","perspUniform","cubeUniform","getExtension","loseContext","resize","pixelRatio","devicePixelRatio","clientWidth","clientHeight","setPose","focal","roll","orig_pitch","orig_yaw","w","roll_adj","vfov","atan","tan","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","uniformMatrix4fv","removed","pendingTextureRequests","textureLoad","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","returnImage","toDataURL","transforms","u","zoom","transform","faces","face","webkitTransform","isLoading","getCanvas","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","img","tex","til","releaseTextureImageLoader","PendingTextureRequest","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","fragEquiCubeBase","renderer","imagetype","Viewer","initialConfig","panoImage","prevTime","autoRotateStart","origHfov","origPitch","isUserInteracting","latestInteraction","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","fullscreenActive","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","hotspotsCreated","defaultConfig","vOffset","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","doubleClickZoom","avoidShowingBackground","animationTimingFunction","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","uiContainer","renderContainer","dragFix","aboutMsg","aboutMessage","pos","mousePosition","t1","t2","infoDisplay","hotSpotDebugIndicator","boxp","lbox","lbar","lbarFill","msg","errorMsg","processOptions","zoomIn","animateInit","zoomOut","toggleFullscreen","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","beta","gamma","multiRes","anError","itemsToLoad","onImageLoad","outerHTML","cubeMap","absoluteURL","sanitizeURL","onloadend","reader","FileReader","flagIndex","ignoreGPanoXMP","xmpData","getTag","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","readAsBinaryString","readAsText","parseGPanoXMP","lengthComputable","unit","numerator","denominator","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","renderInitCallback","renderInit","fireEvent","bounds","coords","mouseEventToCoords","stopAnimation","lookAt","canvasWidth","canvasHeight","pos0","targetTouches","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","pointerIDs","pointerCoordinates","pointerType","pointerId","defined","wheelDeltaY","wheelDelta","detail","keynumber","keycode","changeKey","keyChanged","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","renderHotSpots","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","orientationListener","toEulerAngles","sceneFadeDuration","fadeImg","createHotSpot","createHotSpots","escapeHTML","span","paddingTop","sceneId","onclick","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","scrollWidth","marginLeft","marginTop","scrollHeight","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","yawSin","hfovTan","coord","rollSin","rollCos","MozTransform","photoSphereExcludes","scenes","scene","isPreview","link","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","mozFullScreen","webkitIsFullScreen","constrainHfov","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","transition","current","destroyHotSpots","isLoaded","getPitch","animated","getPitchBounds","getYaw","getYawBounds","getHfov","getHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","getScene","addScene","removeScene","getContainer","hotSpotId","isOrientationSupported","isOrientationActive","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","hasSymbols","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","predicates","isArgs","callee","ES","leftWhitespace","rightWhitespace","ToString","CheckObjectCoercible","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","$ %decodeURIComponent%","$ %encodeURI%","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","reject","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","reviver","StreamTypes","ts","parseAudioPes_","pesType","pusi","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","ptsTime","videoBaseTimestamp","adjustTimestamp_","BrowserRouter","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","ReactIs","REACT_STATICS","contextType","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","KNOWN_STATICS","caller","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","for","aa","ba","A","B","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","J","K","L","__self","__source","M","_owner","N","O","P","Q","keyPrefix","R","U","T",":","ea","fa","V","da","W","X","toArray","only","createRef","PureComponent","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","_context","forwardRef","lazy","_ctor","_status","_result","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","dependencies","ta","va","wa","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","Xa","Ya","Za","$a","bb","db","eb","fb","gb","nativeEvent","Interface","isDefaultPrevented","ib","eventPool","jb","destructor","hb","getPooled","persist","eventPhase","cancelable","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","wb","zb","locale","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","datetime","datetime-local","email","tel","week","Mb","Nb","correspondingUseElement","Ob","Pb","Rb","_valueTracker","setValue","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","dc","ec","fc","gc","hc","ic","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","setAttributeNS","uc","vc","defaultChecked","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","movementX","movementY","Zc","pressure","tangentialPressure","tiltX","tiltY","twist","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","119","120","121","144","145","224","od","pd","dataTransfer","qd","rd","sd","deltaX","wheelDeltaX","deltaY","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","Od","contentEditable","Qd","focusedElem","selectionRange","Md","compareDocumentPosition","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","ge","he","ie","je","namespaceURI","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","col","embed","hr","input","keygen","meta","param","wbr","qe","is","se","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Fe","Ge","He","Ie","Je","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ke","Le","Me","Ne","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","wf","UNSAFE_componentWillReceiveProps","xf","yf","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","qg","lastRenderedState","eagerReducer","eagerState","rg","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","Qg","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","first","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onClick","ph","qh","rh","vh","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","uh","hi","Xh","Bh","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","Ri","Ti","Mi","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","propFullName","secret","getShim","ReactPropTypes","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","alert","define","getPolyfill","boundTrim","that","boundLength","boundArgs","Empty","origKeys","keysShim","originalKeys","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","actualHint","polyfill","thisArg","len","forEachString","forEachObject","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","ONE_SECOND_IN_TS","m2tsStreamTypes","ExpGolomb","aacUtils","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Lazy","Memo","Portal","Profiler","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense"],"mappings":"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","file":"static/js/2.e078a844.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n  doccy = document;\n} else {\n  doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n  if (!doccy) {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n  }\n}\n\nmodule.exports = doccy;","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n    if (hasKeyCode) searchInput = hasKeyCode;\n  } // Numbers\n\n\n  if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n  var search = String(searchInput); // check codes\n\n  var foundNamedKey = codes[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // check aliases\n\n  var foundNamedKey = aliases[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // weird character?\n\n  if (search.length === 1) return search.charCodeAt(0);\n  return undefined;\n}\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\n\n\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode;\n\n    if (keyCode === null || keyCode === undefined) {\n      return false;\n    }\n\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      } // check aliases\n\n\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n\n    return false;\n  }\n};\n\nexports = module.exports = keyCode;\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222 // Helper aliases\n\n};\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n};\n\nfor (i = 97; i < 123; i++) {\n  codes[String.fromCharCode(i)] = i - 32;\n} // numbers\n\n\nfor (var i = 48; i < 58; i++) {\n  codes[i - 48] = i;\n} // function keys\n\n\nfor (i = 1; i < 13; i++) {\n  codes['f' + i] = i + 111;\n} // numpad keys\n\n\nfor (i = 0; i < 10; i++) {\n  codes['numpad ' + i] = i + 96;\n}\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\n\nvar names = exports.names = exports.title = {}; // title for backward compat\n// Create reverse mapping\n\nfor (i in codes) {\n  names[codes[i]] = i;\n} // Add aliases\n\n\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias];\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash = void 0;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\n\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\n\nfunction hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n}\n\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\n\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\n\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\n\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\n\nfunction isExtraneousPopstateEvent(event) {\n  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function Stream() {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n\n\n    this.off = function (type, listener) {\n      var index;\n\n      if (!listeners[type]) {\n        return false;\n      }\n\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n\n\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\n\n\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n}; // Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\n\n\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\n\nvar _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n_findBox = function findBox(data, path) {\n  var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size = toUnsigned(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of data\n\n\n  return results;\n};\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\n\n\nparseType = function parseType(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\n\n\ntimescale = function timescale(init) {\n  var result = {},\n      traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n  return traks.reduce(function (result, trak) {\n    var tkhd, version, index, id, mdhd;\n    tkhd = _findBox(trak, ['tkhd'])[0];\n\n    if (!tkhd) {\n      return null;\n    }\n\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n    mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (!mdhd) {\n      return null;\n    }\n\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    return result;\n  }, result);\n};\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\n\n\nstartTime = function startTime(timescale, fragment) {\n  var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n  trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n  baseTimes = [].concat.apply([], trafs.map(function (traf) {\n    return _findBox(traf, ['tfhd']).map(function (tfhd) {\n      var id, scale, baseTime; // get the track id from the tfhd\n\n      id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n        var version, result;\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n        }\n\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity; // convert base time to seconds\n\n      return baseTime / scale;\n    });\n  })); // return the minimum\n\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\n\n\ngetVideoTrackIds = function getVideoTrackIds(init) {\n  var traks = _findBox(init, ['moov', 'trak']);\n\n  var videoTrackIds = [];\n  traks.forEach(function (trak) {\n    var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n    var tkhds = _findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function (hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: _findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport gud from 'gud';\nimport warning from 'tiny-warning';\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + gud() + '__';\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer =\n  /*#__PURE__*/\n  function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\nexport default index;","import createContext from 'mini-create-react-context';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport { createMemoryHistory, createLocation, locationsAreEqual, createPath } from 'history';\nimport invariant from 'tiny-invariant';\nimport pathToRegexp from 'path-to-regexp';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { isValidElementType } from 'react-is';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport hoistStatics from 'hoist-non-react-statics'; // TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext = function createNamedContext(name) {\n  var context = createContext();\n  context.displayName = name;\n  return context;\n};\n\nvar context =\n/*#__PURE__*/\ncreateNamedContext(\"Router\");\n/**\n * The public API for putting history on context.\n */\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Router, _React$Component);\n\n  Router.computeRootMatch = function computeRootMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  function Router(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      location: props.history.location\n    }; // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n\n    _this._isMounted = false;\n    _this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      _this.unlisten = props.history.listen(function (location) {\n        if (_this._isMounted) {\n          _this.setState({\n            location: location\n          });\n        } else {\n          _this._pendingLocation = location;\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({\n        location: this._pendingLocation\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  };\n\n  _proto.render = function render() {\n    return React.createElement(context.Provider, {\n      children: this.props.children || null,\n      value: {\n        history: this.props.history,\n        location: this.state.location,\n        match: Router.computeRootMatch(this.state.location.pathname),\n        staticContext: this.props.staticContext\n      }\n    });\n  };\n\n  return Router;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(prevProps.history === this.props.history, \"You cannot change <Router history>\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\n\nvar MemoryRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createMemoryHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = MemoryRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return MemoryRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : void 0;\n  };\n}\n\nvar Lifecycle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Lifecycle, _React$Component);\n\n  function Lifecycle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Lifecycle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Lifecycle;\n}(React.Component);\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\n\n\nfunction Prompt(_ref) {\n  var message = _ref.message,\n      _ref$when = _ref.when,\n      when = _ref$when === void 0 ? true : _ref$when;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Prompt> outside a <Router>\") : invariant(false) : void 0;\n    if (!when || context$$1.staticContext) return null;\n    var method = context$$1.history.block;\n    return React.createElement(Lifecycle, {\n      onMount: function onMount(self) {\n        self.release = method(message);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (prevProps.message !== message) {\n          self.release();\n          self.release = method(message);\n        }\n      },\n      onUnmount: function onUnmount(self) {\n        self.release();\n      },\n      message: message\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  var generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path, params) {\n  if (path === void 0) {\n    path = \"/\";\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n/**\n * The public API for navigating programmatically with a component.\n */\n\n\nfunction Redirect(_ref) {\n  var computedMatch = _ref.computedMatch,\n      to = _ref.to,\n      _ref$push = _ref.push,\n      push = _ref$push === void 0 ? false : _ref$push;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Redirect> outside a <Router>\") : invariant(false) : void 0;\n    var history = context$$1.history,\n        staticContext = context$$1.staticContext;\n    var method = push ? history.push : history.replace;\n    var location = createLocation(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : _extends({}, to, {\n      pathname: generatePath(to.pathname, computedMatch.params)\n    }) : to); // When rendering in a static context,\n    // set the new location immediately.\n\n    if (staticContext) {\n      method(location);\n      return null;\n    }\n\n    return React.createElement(Lifecycle, {\n      onMount: function onMount() {\n        method(location);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        var prevLocation = createLocation(prevProps.to);\n\n        if (!locationsAreEqual(prevLocation, _extends({}, location, {\n          key: prevLocation.key\n        }))) {\n          method(location);\n        }\n      },\n      to: to\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\n\nfunction compilePath$1(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = pathToRegexp(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount$1 < cacheLimit$1) {\n    pathCache[path] = result;\n    cacheCount$1++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === void 0 ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n  var paths = [].concat(path);\n  return paths.reduce(function (matched, path) {\n    if (!path) return null;\n    if (matched) return matched;\n\n    var _compilePath = compilePath$1(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n        regexp = _compilePath.regexp,\n        keys = _compilePath.keys;\n\n    var match = regexp.exec(pathname);\n    if (!match) return null;\n    var url = match[0],\n        values = match.slice(1);\n    var isExact = pathname === url;\n    if (exact && !isExact) return null;\n    return {\n      path: path,\n      // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url,\n      // the matched portion of the URL\n      isExact: isExact,\n      // whether or not we matched exactly\n      params: keys.reduce(function (memo, key, index) {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Route, _React$Component);\n\n  function Route() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Route.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Route> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n      : _this.props.path ? matchPath(location.pathname, _this.props) : context$$1.match;\n\n      var props = _extends({}, context$$1, {\n        location: location,\n        match: match\n      });\n\n      var _this$props = _this.props,\n          children = _this$props.children,\n          component = _this$props.component,\n          render = _this$props.render; // Preact uses an empty array as children by\n      // default, so use null if that's the case.\n\n      if (Array.isArray(children) && children.length === 0) {\n        children = null;\n      }\n\n      if (typeof children === \"function\") {\n        children = children(props);\n\n        if (children === undefined) {\n          if (process.env.NODE_ENV !== \"production\") {\n            var path = _this.props.path;\n            process.env.NODE_ENV !== \"production\" ? warning(false, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? \" path=\\\"\" + path + \"\\\"\" : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : void 0;\n          }\n\n          children = null;\n        }\n      }\n\n      return React.createElement(context.Provider, {\n        value: props\n      }, children && !isEmptyChildren(children) ? children : props.match ? component ? React.createElement(component, props) : render ? render(props) : null : null);\n    });\n  };\n\n  return Route;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: function component(props, propName) {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : void 0;\n  };\n\n  Route.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n  return _extends({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n  var base = addLeadingSlash(basename);\n  if (location.pathname.indexOf(base) !== 0) return location;\n  return _extends({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return function () {\n    process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot %s with <StaticRouter>\", methodName) : invariant(false);\n  };\n}\n\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\n\nvar StaticRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handlePush = function (location) {\n      return _this.navigateTo(location, \"PUSH\");\n    };\n\n    _this.handleReplace = function (location) {\n      return _this.navigateTo(location, \"REPLACE\");\n    };\n\n    _this.handleListen = function () {\n      return noop;\n    };\n\n    _this.handleBlock = function () {\n      return noop;\n    };\n\n    return _this;\n  }\n\n  var _proto = StaticRouter.prototype;\n\n  _proto.navigateTo = function navigateTo(location, action) {\n    var _this$props = this.props,\n        _this$props$basename = _this$props.basename,\n        basename = _this$props$basename === void 0 ? \"\" : _this$props$basename,\n        _this$props$context = _this$props.context,\n        context = _this$props$context === void 0 ? {} : _this$props$context;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$basename = _this$props2.basename,\n        basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename,\n        _this$props2$context = _this$props2.context,\n        context = _this$props2$context === void 0 ? {} : _this$props2$context,\n        _this$props2$location = _this$props2.location,\n        location = _this$props2$location === void 0 ? \"/\" : _this$props2$location,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"basename\", \"context\", \"location\"]);\n\n    var history = {\n      createHref: function createHref(path) {\n        return addLeadingSlash(basename + createURL(path));\n      },\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n    return React.createElement(Router, _extends({}, rest, {\n      history: history,\n      staticContext: context\n    }));\n  };\n\n  return StaticRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\n\nvar Switch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Switch, _React$Component);\n\n  function Switch() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Switch.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Switch> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n      // here because toArray adds keys to all child elements and we do not want\n      // to trigger an unmount/remount for two <Route>s that render the same\n      // component at different URLs.\n\n      React.Children.forEach(_this.props.children, function (child) {\n        if (match == null && React.isValidElement(child)) {\n          element = child;\n          var path = child.props.path || child.props.from;\n          match = path ? matchPath(location.pathname, _extends({}, child.props, {\n            path: path\n          })) : context$$1.match;\n        }\n      });\n      return match ? React.cloneElement(element, {\n        location: location,\n        computedMatch: match\n      }) : null;\n    });\n  };\n\n  return Switch;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n/**\n * A public higher-order component to access the imperative API\n */\n\n\nfunction withRouter(Component) {\n  var displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutPropertiesLoose(props, [\"wrappedComponentRef\"]);\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <\" + displayName + \" /> outside a <Router>\") : invariant(false) : void 0;\n      return React.createElement(Component, _extends({}, remainingProps, context$$1, {\n        ref: wrappedComponentRef\n      }));\n    });\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object])\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== \"undefined\") {\n    var global = window;\n    var key = \"__react_router_build__\";\n    var buildNames = {\n      cjs: \"CommonJS\",\n      esm: \"ES modules\",\n      umd: \"UMD\"\n    };\n\n    if (global[key] && global[key] !== \"esm\") {\n      var initialBuildName = buildNames[global[key]];\n      var secondaryBuildName = buildNames[\"esm\"]; // TODO: Add link to article that explains in detail how to avoid\n      // loading 2 different builds.\n\n      throw new Error(\"You are loading the \" + secondaryBuildName + \" build of React Router \" + (\"on a page that is already running the \" + initialBuildName + \" \") + \"build, so things won't work right.\");\n    }\n\n    global[key] = \"esm\";\n  }\n}\n\nexport { MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, generatePath, matchPath, withRouter, context as __RouterContext };","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};","var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport propTypes from \"prop-types\";\nimport React, { PureComponent } from \"react\";\nimport \"../pannellum/css/pannellum.css\";\nimport \"../pannellum/css/style-textInfo.css\";\nimport \"../pannellum/js/libpannellum.js\";\nimport \"../pannellum/js/pannellum.js\";\nimport \"../pannellum/js/RequestAnimationFrame\";\nvar Pannellum = (_temp = _class = function (_PureComponent) {\n  _inherits(Pannellum, _PureComponent);\n\n  function Pannellum(props) {\n    _classCallCheck(this, Pannellum);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.renderImage = function (state) {\n      var children = _this.props.children; // make the array of sub components, even if its one, it become array of one\n\n      var hotspots = [].concat(children);\n      var hotspotArray = [];\n\n      if (Array.isArray(hotspots)) {\n        hotspots.map(function (hotspot) {\n          switch (hotspot.props.type) {\n            case \"info\":\n              return hotspotArray.push({\n                id: Math.random().toString(36).substr(2, 9),\n                type: hotspot.props.type,\n                pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n                yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n                text: hotspot.props.text ? hotspot.props.text : \"\",\n                URL: hotspot.props.URL ? hotspot.props.URL : \"\"\n              });\n\n            case \"custom\":\n              return hotspotArray.push({\n                id: Math.random().toString(36).substr(2, 9),\n                pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n                yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n                cssClass: hotspot.props.cssClass ? hotspot.props.cssClass : \"tooltipcss\",\n                createTooltipFunc: hotspot.props.tooltip ? hotspot.props.tooltip : _this.hotspotTooltip,\n                createTooltipArgs: hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n                clickHandlerFunc: hotspot.props.handleClick ? hotspot.props.handleClick : _this.handleClickHotspot,\n                clickHandlerArgs: hotspot.props.handleClickArg ? hotspot.props.handleClickArg : {\n                  name: \"test\"\n                }\n              });\n\n            default:\n              return [];\n          }\n        });\n      }\n\n      var jsonConfig = {\n        type: \"equirectangular\",\n        panorama: _this.props.image,\n        yaw: _this.props.yaw,\n        pitch: _this.props.pitch,\n        hfov: _this.props.hfov,\n        minHfov: _this.props.minHfov,\n        maxHfov: _this.props.maxHfov,\n        minPitch: _this.props.minPitch,\n        maxPitch: _this.props.maxPitch,\n        minYaw: _this.props.minYaw,\n        maxYaw: _this.props.maxYaw,\n        autoRotate: _this.props.autoRotate,\n        compass: _this.props.compass,\n        preview: _this.props.preview,\n        previewTitle: _this.props.previewTitle,\n        previewAuthor: _this.props.previewAuthor,\n        author: _this.props.author,\n        title: _this.props.title,\n        autoLoad: _this.props.autoLoad,\n        orientationOnByDefault: _this.props.orientationOnByDefault,\n        showZoomCtrl: _this.props.showZoomCtrl,\n        keyboardZoom: _this.props.keyboardZoom,\n        mouseZoom: _this.props.mouseZoom,\n        draggable: _this.props.draggable,\n        showFullscreenCtrl: _this.props.showFullscreenCtrl,\n        showControls: _this.props.showControls,\n        hotSpotDebug: _this.props.hotspotDebug,\n        hotSpots: hotspotArray\n      };\n      Object.keys(jsonConfig).forEach(function (key) {\n        return jsonConfig[key] === \"\" && delete jsonConfig[key];\n      }); // this.setState({ jsonConfig });\n\n      if (state === \"update\") {\n        _this.panorama.destroy();\n      }\n\n      _this.panorama = pannellum.viewer(_this.props.id ? _this.props.id : _this.state.id, jsonConfig);\n\n      _this.panorama.on(\"load\", _this.props.onLoad);\n\n      _this.panorama.on(\"scenechange\", _this.props.onScenechange);\n\n      _this.panorama.on(\"scenechangefadedone\", _this.props.onScenechangefadedone);\n\n      _this.panorama.on(\"error\", _this.props.onError);\n\n      _this.panorama.on(\"errorcleared\", _this.props.onErrorcleared);\n\n      _this.panorama.on(\"mousedown\", _this.props.onMousedown);\n\n      _this.panorama.on(\"mouseup\", _this.props.onMouseup);\n\n      _this.panorama.on(\"touchstart\", _this.props.onTouchstart);\n\n      _this.panorama.on(\"touchend\", _this.props.onTouchend);\n    };\n\n    _this.componentDidMount = function () {\n      _this.renderImage(\"mount\");\n    };\n\n    _this.handleClickHotspot = function (e, args) {\n      console.log(\"hotspot clicked\", args.name);\n    };\n\n    _this.hotspotTooltip = function (hotSpotDiv, args) {\n      hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n      var hDiv = document.createElement(\"div\");\n      hDiv.classList.add(\"hotspot\");\n      var outDiv = document.createElement(\"div\");\n      outDiv.classList.add(\"out\");\n      var inDiv = document.createElement(\"div\");\n      inDiv.classList.add(\"in\");\n      var imageDiv = document.createElement(\"div\");\n      imageDiv.classList.add(\"image\");\n      hotSpotDiv.appendChild(hDiv);\n      hDiv.appendChild(inDiv);\n      hDiv.appendChild(outDiv);\n    };\n\n    _this.getViewer = function () {\n      return _this.panorama;\n    };\n\n    _this.forceRender = function () {\n      _this.renderImage(\"update\");\n    };\n\n    _this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n    return _this;\n  }\n\n  Pannellum.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.image !== this.props.image || prevProps.width !== this.props.width || prevProps.height !== this.props.height || prevProps.compass !== this.props.compass || prevProps.title !== this.props.title || prevProps.author !== this.props.author || prevProps.preview !== this.props.preview || prevProps.previewTitle !== this.props.previewTitle || prevProps.previewAuthor !== this.props.previewAuthor || prevProps.showZoomCtrl !== this.props.showZoomCtrl || prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl || prevProps.showControls !== this.props.showControls || prevProps.children.length !== this.props.children.length) {\n      this.renderImage(\"update\");\n    }\n\n    if (prevProps.maxYaw !== this.props.maxYaw || prevProps.minYaw !== this.props.minYaw || prevProps.maxPitch !== this.props.maxPitch || prevProps.minPitch !== this.props.minPitch || prevProps.maxHfov !== this.props.maxHfov || prevProps.minHfov !== this.props.minHfov) {\n      this.panorama.setYawBounds([this.props.minYaw, this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch, this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov, this.props.maxHfov]);\n    }\n\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  };\n\n  Pannellum.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        width = _props.width,\n        height = _props.height;\n    var divStyle = {\n      width: width,\n      height: height\n    };\n    return React.createElement(\"div\", {\n      id: this.props.id ? this.props.id : this.state.id,\n      style: divStyle,\n      ref: function ref(node) {\n        return _this2.imageNode = node;\n      }\n    });\n  };\n\n  return Pannellum;\n}(PureComponent), _class.defaultProps = {\n  children: [],\n  width: \"100%\",\n  height: \"400px\",\n  image: \"\",\n  yaw: 0,\n  pitch: 0,\n  hfov: 100,\n  minHfov: 50,\n  maxHfov: 150,\n  minPitch: -90,\n  maxPitch: 90,\n  minYaw: -180,\n  maxYaw: 180,\n  autoRotate: 0,\n  compass: false,\n  preview: \"\",\n  previewTitle: \"\",\n  previewAuthor: \"\",\n  title: \"\",\n  author: \"\",\n  autoLoad: false,\n  orientationOnByDefault: false,\n  showZoomCtrl: true,\n  keyboardZoom: true,\n  mouseZoom: true,\n  draggable: true,\n  showFullscreenCtrl: true,\n  showControls: true,\n  onLoad: function onLoad() {},\n  onScenechange: function onScenechange() {},\n  onScenechangefadedone: function onScenechangefadedone() {},\n  onError: function onError() {},\n  onErrorcleared: function onErrorcleared() {},\n  onMousedown: function onMousedown() {},\n  onMouseup: function onMouseup() {},\n  onTouchstart: function onTouchstart() {},\n  onTouchend: function onTouchend() {},\n  hotspotDebug: false\n}, _temp);\nPannellum.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n  id: propTypes.string,\n  width: propTypes.string,\n  height: propTypes.string,\n  image: propTypes.string,\n  yaw: propTypes.number,\n  pitch: propTypes.number,\n  hfov: propTypes.number,\n  minHfov: propTypes.number,\n  maxHfov: propTypes.number,\n  minPitch: propTypes.number,\n  maxPitch: propTypes.number,\n  minYaw: propTypes.number,\n  maxYaw: propTypes.number,\n  autoRotate: propTypes.number,\n  compass: propTypes.bool,\n  preview: propTypes.string,\n  previewTitle: propTypes.string,\n  previewAuthor: propTypes.string,\n  title: propTypes.string,\n  author: propTypes.string,\n  autoLoad: propTypes.bool,\n  orientationOnByDefault: propTypes.bool,\n  showZoomCtrl: propTypes.bool,\n  keyboardZoom: propTypes.bool,\n  mouseZoom: propTypes.bool,\n  draggable: propTypes.bool,\n  showFullscreenCtrl: propTypes.bool,\n  showControls: propTypes.bool,\n  onLoad: propTypes.func,\n  onScenechange: propTypes.func,\n  onScenechangefadedone: propTypes.func,\n  onError: propTypes.func,\n  onErrorcleared: propTypes.func,\n  onMousedown: propTypes.func,\n  onMouseup: propTypes.func,\n  onTouchstart: propTypes.func,\n  onTouchend: propTypes.func,\n  hotspotDebug: propTypes.bool,\n  tooltip: propTypes.func,\n  tooltipArg: propTypes.object,\n  handleClick: propTypes.func,\n  handleClickArg: propTypes.object,\n  cssClass: propTypes.string\n} : {};\n\nPannellum.Hotspot = function () {};\n\nPannellum.Hotspot = function () {};\n\nexport default Pannellum;","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n\nexport { LineStream, ParseStream, Parser };","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\nvar PADDING = void 0;\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n} // pre-define the padding values\n\n\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\nexport { pad, unpad, version as VERSION };","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","/**\n * @license\n * Video.js 7.5.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.5.4\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom =\n/*#__PURE__*/\nObject.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events =\n/*#__PURE__*/\nObject.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a keydown event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.player_) {\n      this.player_.handleKeyPress(event);\n    }\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this; // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser =\n/*#__PURE__*/\nObject.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi;\nvar prefixedAPI = false; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  prefixedAPI = browserApi[0] === specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      this.close();\n    }\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url =\n/*#__PURE__*/\nObject.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `Component`s element.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  }\n  /**\n   * Disable this `Component`s element.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  }\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space or Enter key operation to fire a click event\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    } // call handleFocus manually to get hotkeys working\n\n\n    this.player_.handleFocus({});\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for a button.\n    if (!(keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter'))) {\n      // Pass keypress handling up for unsupported keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise); // call handleFocus manually to get hotkeys working\n\n      this.player_.handleFocus({});\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {} // Override the default `Button` behavior, and don't pass the keypress event\n  //  up to the player because this button is part of a `ModalDialog`, which\n  //  doesn't pass keypresses to the player either.\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepForward();\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keypress handling up for unused keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    } // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n\n    var kinds = (referenceTrack.kinds || [referenceTrack.kind]).filter(Boolean);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n} // on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.fullWindowOnEscKey);\n    _this.boundHandleKeyPress_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleKeyPress); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        if (typeof _this[name$$1] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        _this[name$$1](options.plugins[name$$1]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('focus', _this.handleFocus);\n\n    _this.on('blur', _this.handleBlur);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, FullscreenApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    off(document, 'keydown', this.boundHandleKeyPress_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise.catch(restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise.catch(muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(document[fsApi.fullscreenElement] === this.el() || this.el().matches(':' + fsApi.fullscreen)); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (!prefixedAPI) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * This gets called when a `Player` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    // call off first to make sure we don't keep adding keydown handlers\n    off(document, 'keydown', this.boundHandleKeyPress_);\n    on(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when a `Player` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.options_.userActions && this.options_.userActions.hotkeys && this.options_.userActions.hotkeys !== false) {\n      if (typeof this.options_.userActions.hotkeys === 'function') {\n        this.options_.userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[FullscreenApi.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.9.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      } // TODO: check for sidx here\n      // Continue asynchronously if there is no sidx\n      // wait one tick to allow haveMaster to run first on a child loader\n\n\n      this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n        startingState: startingState,\n        playlist: playlist\n      }), 0);\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.srcUrl = resolveManifestRedirect(_this3.handleManifestRedirects, _this3.srcUrl, req);\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this6.master, newMaster);\n\n        if (updatedMaster) {\n          _this6.master = updatedMaster;\n        }\n\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.9.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\nvar PannellumVideo = (_temp = _class = function (_Component) {\n  _inherits(PannellumVideo, _Component);\n\n  function PannellumVideo(props) {\n    _classCallCheck(this, PannellumVideo);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.renderVideo = function (state) {\n      var children = _this.props.children; // make the array of sub components, even if its one, it become array of one \n\n      var hotspots = [].concat(children);\n      var hotspotArray = [];\n\n      if (Array.isArray(hotspots)) {\n        hotspots.map(function (hotspot) {\n          switch (hotspot.props.type) {\n            case \"info\":\n              return hotspotArray.push({\n                \"id\": Math.random().toString(36).substr(2, 9),\n                \"type\": hotspot.props.type,\n                \"pitch\": hotspot.props.pitch ? hotspot.props.pitch : 10,\n                \"yaw\": hotspot.props.yaw ? hotspot.props.yaw : 10,\n                \"text\": hotspot.props.text ? hotspot.props.text : \"\",\n                \"URL\": hotspot.props.URL ? hotspot.props.URL : \"\"\n              });\n\n            case \"custom\":\n              return hotspotArray.push({\n                \"id\": Math.random().toString(36).substr(2, 9),\n                \"pitch\": hotspot.props.pitch ? hotspot.props.pitch : 10,\n                \"yaw\": hotspot.props.yaw ? hotspot.props.yaw : 10,\n                \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n                \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : _this.hotspotTooltip,\n                \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n                \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : _this.handleClickHotspot,\n                \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : {\n                  name: \"test\"\n                }\n              });\n\n            default:\n              return [];\n          }\n        });\n      }\n\n      if (state === \"update\") {\n        _this.video = videojs(_this.videoNode);\n        var cuurentHS = [].concat(_this.video.pnlmViewer.getConfig().hotSpots);\n\n        _this.video.pnlmViewer.setYaw(_this.props.yaw);\n\n        _this.video.pnlmViewer.setPitch(_this.props.pitch);\n\n        _this.video.pnlmViewer.setHfov(_this.props.hfov);\n\n        _this.video.pnlmViewer.setHfovBounds([_this.props.minHfov, _this.props.maxHfov]); //remove all hotspots\n\n\n        cuurentHS.map(function (hs) {\n          return _this.video.pnlmViewer.removeHotSpot(hs.id);\n        }); // Adding new hotspots\n\n        hotspotArray.map(function (hs) {\n          return _this.video.pnlmViewer.addHotSpot(hs);\n        }); // setting new video\n\n        _this.video.src({\n          type: 'video/mp4',\n          src: _this.props.video\n        });\n\n        return _this.video.play();\n      } else {\n        _this.video = videojs(_this.videoNode, {\n          loop: _this.props.loop,\n          autoplay: _this.props.autoplay,\n          controls: _this.props.controls,\n          muted: _this.props.muted,\n          plugins: {\n            pannellum: {\n              yaw: _this.props.yaw,\n              pitch: _this.props.pitch,\n              hfov: _this.props.hfov,\n              minHfov: _this.props.minHfov,\n              maxHfov: _this.props.maxHfov,\n              minPitch: _this.props.minPitch,\n              maxPitch: _this.props.maxPitch,\n              minYaw: _this.props.minYaw,\n              maxYaw: _this.props.maxYaw,\n              hotSpotDebug: _this.props.hotspotDebug,\n              autoRotate: _this.props.autoRotate,\n              mouseZoom: _this.props.mouseZoom,\n              hotSpots: hotspotArray\n            }\n          }\n        });\n\n        _this.video.src({\n          type: 'video/mp4',\n          src: _this.props.video\n        });\n\n        _this.video.play();\n      }\n    };\n\n    _this.componentDidMount = function () {\n      _this.renderVideo(\"mount\");\n    };\n\n    _this.handleClickHotspot = function (e, args) {\n      console.log(\"hotspot clicked\", args.name);\n    };\n\n    _this.hotspotTooltip = function (hotSpotDiv, args) {\n      hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n      var hDiv = document.createElement('div');\n      hDiv.classList.add('hotspot');\n      var outDiv = document.createElement('div');\n      outDiv.classList.add('out');\n      var inDiv = document.createElement('div');\n      inDiv.classList.add('in');\n      var imageDiv = document.createElement('div');\n      imageDiv.classList.add('image');\n      hotSpotDiv.appendChild(hDiv);\n      hDiv.appendChild(inDiv);\n      hDiv.appendChild(outDiv);\n    };\n\n    _this.getViewer = function () {\n      return _this.video.pnlmViewer;\n    };\n\n    _this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n    return _this;\n  }\n\n  PannellumVideo.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n  };\n\n  PannellumVideo.prototype.componentWillUnmount = function componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  };\n\n  PannellumVideo.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        width = _props.width,\n        height = _props.height,\n        video = _props.video;\n    var divStyle = {\n      width: width,\n      height: height\n    };\n    return React.createElement('div', {\n      'data-vjs-player': true\n    }, React.createElement('video', {\n      id: this.props.id ? this.props.id : this.state.id,\n      className: 'video-js vjs-default-skin vjs-big-play-centered',\n      ref: function ref(node) {\n        return _this2.videoNode = node;\n      },\n      preload: 'none',\n      crossOrigin: 'anonymous',\n      style: divStyle\n    }));\n  };\n\n  return PannellumVideo;\n}(Component), _class.defaultProps = {\n  children: [],\n  width: '100%',\n  height: '400px',\n  video: '',\n  yaw: 0,\n  pitch: 0,\n  hfov: 100,\n  minHfov: 50,\n  maxHfov: 150,\n  minPitch: -90,\n  maxPitch: 90,\n  minYaw: -180,\n  maxYaw: 180,\n  hotspotDebug: false,\n  autoRotate: 0,\n  mouseZoom: true,\n  loop: false,\n  autoplay: true,\n  controls: false,\n  muted: true\n}, _temp);\nPannellumVideo.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n  id: propTypes.string,\n  width: propTypes.string,\n  height: propTypes.string,\n  video: propTypes.string,\n  yaw: propTypes.number,\n  pitch: propTypes.number,\n  hfov: propTypes.number,\n  minHfov: propTypes.number,\n  maxHfov: propTypes.number,\n  minPitch: propTypes.number,\n  maxPitch: propTypes.number,\n  minYaw: propTypes.number,\n  maxYaw: propTypes.number,\n  hotspotDebug: propTypes.bool,\n  autoRotate: propTypes.number,\n  mouseZoom: propTypes.bool,\n  loop: propTypes.bool,\n  autoplay: propTypes.bool,\n  controls: propTypes.bool,\n  muted: propTypes.bool,\n  tooltip: propTypes.func,\n  tooltipArg: propTypes.object,\n  handleClick: propTypes.func,\n  handleClickArg: propTypes.object,\n  cssClass: propTypes.string\n} : {};\nexport default PannellumVideo;","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js';\n\n(function (document, videojs, pannellum) {\n  'use strict';\n\n  videojs.registerPlugin('pannellum', function (config) {\n    // Create Pannellum instance\n    var player = this;\n    var container = player.el();\n    var vid = container.getElementsByTagName('video')[0],\n        pnlmContainer = document.createElement('div');\n    config = config || {};\n    config.type = 'equirectangular';\n    config.dynamic = true;\n    config.showZoomCtrl = false;\n    config.showFullscreenCtrl = false;\n    config.autoLoad = true;\n    config.panorama = vid;\n    pnlmContainer.style.visibility = 'hidden';\n    player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n    container.insertBefore(pnlmContainer, container.firstChild);\n    vid.style.display = 'none'; // Handle update settings\n\n    player.on('play', function () {\n      if (vid.readyState > 1) player.pnlmViewer.setUpdate(true);\n    });\n    player.on('canplay', function () {\n      if (!player.paused()) player.pnlmViewer.setUpdate(true);\n    });\n    player.on('pause', function () {\n      player.pnlmViewer.setUpdate(false);\n    });\n    player.on('loadeddata', function () {\n      pnlmContainer.style.visibility = 'visible';\n    });\n    player.on('seeking', function () {\n      if (player.paused()) player.pnlmViewer.setUpdate(true);\n    });\n    player.on('seeked', function () {\n      if (player.paused()) player.pnlmViewer.setUpdate(false);\n    });\n  });\n})(document, videojs, pannellum);","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\nexport { Pannellum, PannellumVideo };","function clean(s) {\n  return s.replace(/\\n\\r?\\s*/g, '');\n}\n\nmodule.exports = function tsml(sa) {\n  var s = '',\n      i = 0;\n\n  for (; i < arguments.length; i++) {\n    s += clean(sa[i]) + (arguments[i + 1] || '');\n  }\n\n  return s;\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar mp4 = require('./mp4-generator.js');\n\nvar frameUtils = require('./frame-utils');\n\nvar audioFrameUtils = require('./audio-frame-utils');\n\nvar trackDecodeInfo = require('./track-decode-info');\n\nvar m2ts = require('../m2ts/m2ts.js');\n\nvar AdtsStream = require('../codecs/adts.js');\n\nvar H264Stream = require('../codecs/h264').H264Stream;\n\nvar AacStream = require('../aac');\n\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData; // constants\n\n\nvar AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\nvar VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\nvar _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n/**\n * Compare two arrays (even typed) for same-ness\n */\n\n\nvar arrayEquals = function arrayEquals(a, b) {\n  var i;\n\n  if (a.length !== b.length) {\n    return false;\n  } // compare the value of each element in the array\n\n\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n  var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\n_AudioSegmentStream = function AudioSegmentStream(track, options) {\n  var adtsFrames = [],\n      sequenceNumber = 0,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n  options = options || {};\n\n  _AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function (data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        track[prop] = data[prop];\n      });\n    } // buffer audio data until end() is called\n\n\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function (earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function () {\n    var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n\n    track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n    adtsFrames = [];\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    trackDecodeInfo.clearDtsInfo(track);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\n_AudioSegmentStream.prototype = new Stream();\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n_VideoSegmentStream = function VideoSegmentStream(track, options) {\n  var sequenceNumber = 0,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n  options = options || {};\n\n  _VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n  this.gopCache_ = [];\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n\n  this.push = function (nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    } // buffer video until flush() is called\n\n\n    nalUnits.push(nalUnit);\n  };\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n\n\n  this.flush = function () {\n    var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n\n      nalUnits.shift();\n    } // Return early if no video data has been observed\n\n\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    } // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n\n\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n        gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    } // Trim gops to align with gopsToAlignWith\n\n\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n\n\n      trackDecodeInfo.clearDtsInfo(track);\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n\n    track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    this.trigger('processedGopsInfo', gops.map(function (gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n    this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    }); // Keep a maximum of 6 GOPs in the cache\n\n    this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n    nalUnits = [];\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n    moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.resetStream_(); // Continue with the flush process now\n\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function () {\n    trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n\n    config = undefined;\n    pps = undefined;\n  }; // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n\n\n  this.getGopForFusion_ = function (nalUnit) {\n    var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n    allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n    nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      } // The distance between the end of the gop and the start of the nalUnit\n\n\n      dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n\n      if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj || nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n\n    return null;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n\n\n  this.alignGopsAtStart_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      } // current gop starts before the current gop we want to align on. so increment gop\n      // index\n\n\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n\n\n  this.alignGopsAtEnd_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function (total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, {\n      byteLength: 0,\n      duration: 0,\n      nalCount: 0\n    });\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function (newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\n_VideoSegmentStream.prototype = new Stream();\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\n\n_CoalesceStream = function CoalesceStream(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n  this.push = function (output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    } // buffer incoming id3 tags until the final flush\n\n\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    } // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n\n\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\n_CoalesceStream.prototype = new Stream();\n\n_CoalesceStream.prototype.flush = function (flushSource) {\n  var offset = 0,\n      event = {\n    captions: [],\n    captionStreams: {},\n    metadata: [],\n    info: {}\n  },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n  initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n  event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n  // and track definitions\n\n  event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n  event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  } // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n\n\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  } // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n\n\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts;\n\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  } // We add this to every single emitted segment even though we only need\n  // it for the first\n\n\n  event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0; // Emit the built segment\n\n  this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\n\n\n_Transmuxer = function Transmuxer(options) {\n  var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n\n  _Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n    pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n    pipeline.metadataStream.on('timestamp', function (frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n    pipeline.aacStream.on('data', function (data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n    pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n\n    pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n    pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n    pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n    pipeline.elementaryStream.on('data', function (data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length; // scan the tracks listed in the metadata\n\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        } // hook up the video segment stream to the first track with h264 data\n\n\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n          pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n            // When video emits timelineStartInfo data after a flush, we forward that\n            // info to the AudioSegmentStream, if it exists, because video timeline\n            // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n          pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          }); // Set up the final part of the video pipeline\n\n          pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  }; // hook up the segment streams once track metadata is delivered\n\n\n  this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function (gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  }; // feed incoming data to the front of the parsing pipeline\n\n\n  this.push = function (data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n\n      hasFlushed = false;\n    }\n\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  }; // flush any buffered data\n\n\n  this.flush = function () {\n    hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n    this.transmuxPipeline_.headOfPipeline.flush();\n  }; // Caption data has to be reset when seeking outside buffered range\n\n\n  this.resetCaptions = function () {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n};\n\n_Transmuxer.prototype = new Stream();\nmodule.exports = {\n  Transmuxer: _Transmuxer,\n  VideoSegmentStream: _VideoSegmentStream,\n  AudioSegmentStream: _AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function isLikelyAacData(data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function parseType(header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function parseSampleRate(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function parseAacTimestamp(packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function () {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function () {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function (root) {\n  /* jshint ignore:end */\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n  var URLToolkit = {\n    // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n      opts = opts || {}; // remove any remaining space and CRLF\n\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n\n      var baseParts = URLToolkit.parseURL(baseURL);\n\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function parseURL(url) {\n      var parts = URL_REGEX.exec(url);\n\n      if (!parts) {\n        return null;\n      }\n\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function normalizePath(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function buildURLFromParts(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n  /* jshint ignore:start */\n\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = URLToolkit;else if (typeof define === 'function' && define.amd) define([], function () {\n    return URLToolkit;\n  });else if (typeof exports === 'object') exports[\"URLToolkit\"] = URLToolkit;else root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n  // see https://tools.ietf.org/html/rfc1808\n\n  /* jshint ignore:start */\n  (function (root) {\n    /* jshint ignore:end */\n    var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n    var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n    var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n    var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n    var URLToolkit = {\n      // jshint ignore:line\n      // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n      // E.g\n      // With opts.alwaysNormalize = false (default, spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n      // With opts.alwaysNormalize = true (not spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n      buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n        opts = opts || {}; // remove any remaining space and CRLF\n\n        baseURL = baseURL.trim();\n        relativeURL = relativeURL.trim();\n\n        if (!relativeURL) {\n          // 2a) If the embedded URL is entirely empty, it inherits the\n          // entire base URL (i.e., is set equal to the base URL)\n          // and we are done.\n          if (!opts.alwaysNormalize) {\n            return baseURL;\n          }\n\n          var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n          if (!basePartsForNormalise) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n          return URLToolkit.buildURLFromParts(basePartsForNormalise);\n        }\n\n        var relativeParts = URLToolkit.parseURL(relativeURL);\n\n        if (!relativeParts) {\n          throw new Error('Error trying to parse relative URL.');\n        }\n\n        if (relativeParts.scheme) {\n          // 2b) If the embedded URL starts with a scheme name, it is\n          // interpreted as an absolute URL and we are done.\n          if (!opts.alwaysNormalize) {\n            return relativeURL;\n          }\n\n          relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n          return URLToolkit.buildURLFromParts(relativeParts);\n        }\n\n        var baseParts = URLToolkit.parseURL(baseURL);\n\n        if (!baseParts) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n          // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n          // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n          var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n          baseParts.netLoc = pathParts[1];\n          baseParts.path = pathParts[2];\n        }\n\n        if (baseParts.netLoc && !baseParts.path) {\n          baseParts.path = '/';\n        }\n\n        var builtParts = {\n          // 2c) Otherwise, the embedded URL inherits the scheme of\n          // the base URL.\n          scheme: baseParts.scheme,\n          netLoc: relativeParts.netLoc,\n          path: null,\n          params: relativeParts.params,\n          query: relativeParts.query,\n          fragment: relativeParts.fragment\n        };\n\n        if (!relativeParts.netLoc) {\n          // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n          // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n          // (if any) of the base URL.\n          builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n          // path is not relative and we skip to Step 7.\n\n          if (relativeParts.path[0] !== '/') {\n            if (!relativeParts.path) {\n              // 5) If the embedded URL path is empty (and not preceded by a\n              // slash), then the embedded URL inherits the base URL path\n              builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <params> of the base\n              // URL (if any) and\n\n              if (!relativeParts.params) {\n                builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <query> of the base\n                // URL (if any) and we skip to step 7.\n\n                if (!relativeParts.query) {\n                  builtParts.query = baseParts.query;\n                }\n              }\n            } else {\n              // 6) The last segment of the base URL's path (anything\n              // following the rightmost slash \"/\", or the entire path if no\n              // slash is present) is removed and the embedded URL's path is\n              // appended in its place.\n              var baseURLPath = baseParts.path;\n              var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n              builtParts.path = URLToolkit.normalizePath(newPath);\n            }\n          }\n        }\n\n        if (builtParts.path === null) {\n          builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n        }\n\n        return URLToolkit.buildURLFromParts(builtParts);\n      },\n      parseURL: function parseURL(url) {\n        var parts = URL_REGEX.exec(url);\n\n        if (!parts) {\n          return null;\n        }\n\n        return {\n          scheme: parts[1] || '',\n          netLoc: parts[2] || '',\n          path: parts[3] || '',\n          params: parts[4] || '',\n          query: parts[5] || '',\n          fragment: parts[6] || ''\n        };\n      },\n      normalizePath: function normalizePath(path) {\n        // The following operations are\n        // then applied, in order, to the new path:\n        // 6a) All occurrences of \"./\", where \".\" is a complete path\n        // segment, are removed.\n        // 6b) If the path ends with \".\" as a complete path segment,\n        // that \".\" is removed.\n        path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n        // complete path segment not equal to \"..\", are removed.\n        // Removal of these path segments is performed iteratively,\n        // removing the leftmost matching pattern on each iteration,\n        // until no matching pattern remains.\n        // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n        // complete path segment not equal to \"..\", that\n        // \"<segment>/..\" is removed.\n\n        while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n        return path.split('').reverse().join('');\n      },\n      buildURLFromParts: function buildURLFromParts(parts) {\n        return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n      }\n    };\n    /* jshint ignore:start */\n\n    module.exports = URLToolkit;\n  })(commonjsGlobal);\n  /* jshint ignore:end */\n\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\n\n\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nwindow.libpannellum = function (window, document, undefined) {\n  /**\n  * Creates a new panorama renderer.\n  * @constructor\n  * @param {HTMLElement} container - The container element for the renderer.\n  */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n\n    this.init = function (_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined) {\n        _imageType = 'equirectangular';\n      }\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' && _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw {\n          type: 'config error'\n        };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {}; // Clear old data\n\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        if (program.texture) {\n          gl.deleteTexture(program.texture);\n        }\n\n        if (program.nodeCache) {\n          for (var i = 0; i < program.nodeCache.length; i++) {\n            gl.deleteTexture(program.nodeCache[i].texture);\n          }\n        }\n\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n\n      pose = undefined;\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined) {\n              cubeImgWidth = image[s].width;\n            }\n\n            if (cubeImgWidth != image[s].width) {\n              console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);\n            }\n          } else {\n            faceMissing = true;\n          }\n        }\n      }\n\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) {\n          // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255; // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0) {\n              image[s] = backgroundSquare;\n            }\n          }\n        }\n      } // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n\n\n      if (!(imageType == 'cubemap' && (cubeImgWidth & cubeImgWidth - 1) !== 0 && (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) || navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) || navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) || navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl) {\n          gl = canvas.getContext('experimental-webgl', {\n            alpha: false,\n            depth: false\n          });\n        }\n\n        if (gl && gl.getError() == 1286) {\n          handleWebGLError1286();\n        }\n      } // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n\n\n      if (!gl && (imageType == 'multires' && image.hasOwnProperty('fallbackPath') || imageType == 'cubemap') && ('WebkitAppearance' in document.documentElement.style || navigator.userAgent.match(/Trident.*rv[ :]*11\\./) || navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        } // Initialize renderer\n\n\n        world = document.createElement('div');\n        world.className = 'pnlm-world'; // Add images\n\n        var path;\n\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n\n        var onLoad = function onLoad() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data; // Duplicate edge pixels\n\n          var i;\n          var j;\n\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * faceCanvas.width * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[faceCanvas.width * (faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          } // Draw image width duplicated edge pixels on canvas\n\n\n          faceContext.putImageData(imgData, 0, 0);\n          incLoaded.call(this);\n        };\n\n        var incLoaded = function incLoaded() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined) {\n              fallbackImgSize = this.width;\n            }\n\n            if (fallbackImgSize != this.width) {\n              console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);\n            }\n          } else {\n            faceMissing = true;\n          }\n\n          loaded++;\n\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n\n        faceMissing = false;\n\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw {\n          type: 'no webgl'\n        };\n      }\n\n      if (imageType == 'cubemap') {\n        fillMissingFaces(cubeImgWidth);\n      }\n\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n\n      image.invTileResolution = 1 / image.tileResolution;\n      var vertices = createCube();\n      vtmps = [];\n\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      } // Make sure image isn't too big\n\n\n      var width = 0,\n          maxWidth = 0;\n\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, ' + 'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw {\n          type: 'webgl size error',\n          width: width,\n          maxWidth: maxWidth\n        };\n      } // Store horizon pitch and roll if applicable\n\n\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined)) {\n        pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch, params.horizonRoll == undefined ? 0 : params.horizonRoll];\n      } // Set 2d texture binding\n\n\n      var glBindType = gl.TEXTURE_2D; // Create viewport for entire canvas\n\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight); // Create vertex shader\n\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs); // Create fragment shader\n\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs); // Link WebGL program\n\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program); // Log errors\n\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        console.log(gl.getShaderInfoLog(vs));\n      }\n\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        console.log(gl.getShaderInfoLog(fs));\n      }\n\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        console.log(gl.getProgramInfoLog(program));\n      } // Use WebGL program\n\n\n      gl.useProgram(program);\n      program.drawInProgress = false; // Set background clear color (does not apply to cubemap/fallback image)\n\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT); // Look up texture coordinates location\n\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer) {\n          texCoordBuffer = gl.createBuffer();\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, 1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0); // Pass aspect ratio\n\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight); // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot'); // Pass horizontal extent, vertical extent, and vertical offset\n\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2); // Set background color\n\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        } // Create texture\n\n\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture); // Upload images to texture depending on type\n\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        } // Set parameters for rendering any size\n\n\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation); // Create buffers\n\n        if (!cubeVertBuf) {\n          cubeVertBuf = gl.createBuffer();\n        }\n\n        if (!cubeVertTexCoordBuf) {\n          cubeVertTexCoordBuf = gl.createBuffer();\n        }\n\n        if (!cubeVertIndBuf) {\n          cubeVertIndBuf = gl.createBuffer();\n        } // Bind texture coordinate buffer and pass coordinates to WebGL\n\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]), gl.STATIC_DRAW); // Bind square index buffer and pass indicies to WebGL\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.STATIC_DRAW); // Find uniforms\n\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix'); //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      } // Check if there was an error\n\n\n      var err = gl.getError();\n\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw {\n          type: 'webgl error'\n        };\n      }\n\n      callback();\n    };\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n\n\n    this.destroy = function () {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n\n        if (extension) {\n          extension.loseContext();\n        }\n      }\n    };\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n\n\n    this.resize = function () {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n\n      if (gl) {\n        if (gl.getError() == 1286) {\n          handleWebGLError1286();\n        }\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    }; // Initialize canvas size\n\n\n    this.resize();\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n\n    this.setPose = function (horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n\n\n    this.render = function (pitch, yaw, hfov, params) {\n      var focal,\n          i,\n          s,\n          roll = 0;\n\n      if (params === undefined) {\n        params = {};\n      }\n\n      if (params.roll) {\n        roll = params.roll;\n      } // Apply pitch and roll transformation if applicable\n\n\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n            horizonRoll = pose[1]; // Calculate new pitch and yaw\n\n        var orig_pitch = pitch,\n            orig_yaw = yaw,\n            x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) + Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) + Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n            y = -Math.sin(pitch) * Math.sin(horizonRoll) + Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n            z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) + Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) + Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x); // Calculate roll\n\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) - Math.cos(horizonPitch) * Math.sin(orig_yaw)), Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw), Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) + Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n            w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0] * w[0] + v[1] * w[1]) / (Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]) * Math.sqrt(w[0] * w[0] + w[1] * w[1])), 1), -1));\n\n        if (v[2] < 0) {\n          roll_adj = 2 * Math.PI - roll_adj;\n        }\n\n        roll += roll_adj;\n      } // If no WebGL\n\n\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) '; // Apply face transforms\n\n        var faces = Object.keys(transforms);\n\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n\n          if (!face) {\n            continue;\n          } // ignore missing face to support partial cubemap/fallback image\n\n\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n\n        return;\n      }\n\n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5); // Pass psi, theta, roll, and focal length\n\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n\n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        } // Draw using current buffer\n\n\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0); // Find correct zoom level\n\n        checkZoom(hfov); // Create rotation matrix\n\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix); // Set matrix uniforms\n\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix))); // Find current nodes\n\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n\n        if (program.nodeCache.length > 200 && program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n\n        program.currentNodes = [];\n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n\n        program.currentNodes.sort(multiresNodeRenderSort); // Unqueue any pending requests for nodes that are no longer visible\n\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        } // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n\n\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n              setTimeout(processNextTile, 0, node); // Only process one tile per frame to improve responsiveness\n\n              break;\n            }\n          }\n        } // Draw tiles\n\n\n        multiresDraw();\n      }\n\n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n\n\n    this.isLoading = function () {\n      if (gl && imageType == 'multires') {\n        for (var i = 0; i < program.currentNodes.length; i++) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n\n\n    this.getCanvas = function () {\n      return canvas;\n    };\n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n\n\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      } // Higher timestamp first\n\n\n      return b.timestamp - a.timestamp;\n    }\n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n\n\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      } // Lower distance from center first\n\n\n      return a.diff - b.diff;\n    }\n    /**\n     * Draws multires nodes.\n     * @private\n     */\n\n\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        for (var i = 0; i < program.currentNodes.length; i++) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0); // Prep for texture\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0); // Bind texture and draw tile\n\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n\n        program.drawInProgress = false;\n      }\n    }\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n\n\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s', side).replace('%l', level).replace('%x', x).replace('%y', y);\n    }\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n\n\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x * x + y * y + z * z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += ydiff > Math.PI ? -2 * Math.PI : ydiff < -Math.PI ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff)); // Add node to current nodes and load texture if needed\n\n        var inCurrent = false;\n\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        } // TODO: Test error\n        // Create child nodes\n\n\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = cubeSize * 2 % image.tileResolution;\n\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n\n          var f = 0.5;\n\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f,\n              f2 = f,\n              f3 = f,\n              i1 = i,\n              i2 = i,\n              i3 = i; // Handle non-symmetric tiles\n\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          } // Handle small tiles that have fewer than four children\n\n\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n\n          vtmp = [v[0], v[1], v[2], v[0] * f1 + v[3] * i1, v[1] * f + v[4] * i, v[2] * f3 + v[5] * i3, v[0] * f1 + v[6] * i1, v[1] * f2 + v[7] * i2, v[2] * f3 + v[8] * i3, v[0] * f + v[9] * i, v[1] * f2 + v[10] * i2, v[2] * f3 + v[11] * i3];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x * 2, node.y * 2, image.fullpath);\n          children.push(ntmp);\n\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0] * f1 + v[3] * i1, v[1] * f + v[4] * i, v[2] * f3 + v[5] * i3, v[3], v[4], v[5], v[3] * f + v[6] * i, v[4] * f2 + v[7] * i2, v[5] * f3 + v[8] * i3, v[0] * f1 + v[6] * i1, v[1] * f2 + v[7] * i2, v[2] * f3 + v[8] * i3];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x * 2 + 1, node.y * 2, image.fullpath);\n            children.push(ntmp);\n          }\n\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) && !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0] * f1 + v[6] * i1, v[1] * f2 + v[7] * i2, v[2] * f3 + v[8] * i3, v[3] * f + v[6] * i, v[4] * f2 + v[7] * i2, v[5] * f3 + v[8] * i3, v[6], v[7], v[8], v[9] * f1 + v[6] * i1, v[10] * f + v[7] * i, v[11] * f3 + v[8] * i3];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x * 2 + 1, node.y * 2 + 1, image.fullpath);\n            children.push(ntmp);\n          }\n\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0] * f + v[9] * i, v[1] * f2 + v[10] * i2, v[2] * f3 + v[11] * i3, v[0] * f1 + v[6] * i1, v[1] * f2 + v[7] * i2, v[2] * f3 + v[8] * i3, v[9] * f1 + v[6] * i1, v[10] * f + v[7] * i, v[11] * f3 + v[8] * i3, v[9], v[10], v[11]];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x * 2, node.y * 2 + 1, image.fullpath);\n            children.push(ntmp);\n          }\n\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n\n\n    function createCube() {\n      return [-1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, // Front face\n      1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, // Back face\n      -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, // Up face\n      -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, // Down face\n      -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, // Left face\n      1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1 // Right face\n      ];\n    }\n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n\n\n    function identityMatrix3() {\n      return [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    }\n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n\n\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n\n      if (axis == 'x') {\n        return [m[0], c * m[1] + s * m[2], c * m[2] - s * m[1], m[3], c * m[4] + s * m[5], c * m[5] - s * m[4], m[6], c * m[7] + s * m[8], c * m[8] - s * m[7]];\n      }\n\n      if (axis == 'y') {\n        return [c * m[0] - s * m[2], m[1], c * m[2] + s * m[0], c * m[3] - s * m[5], m[4], c * m[5] + s * m[3], c * m[6] - s * m[8], m[7], c * m[8] + s * m[6]];\n      }\n\n      if (axis == 'z') {\n        return [c * m[0] + s * m[1], c * m[1] - s * m[0], m[2], c * m[3] + s * m[4], c * m[4] - s * m[3], m[5], c * m[6] + s * m[7], c * m[7] - s * m[6], m[8]];\n      }\n    }\n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n\n\n    function makeMatrix4(m) {\n      return [m[0], m[1], m[2], 0, m[3], m[4], m[5], 0, m[6], m[7], m[8], 0, 0, 0, 0, 1];\n    }\n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n\n\n    function transposeMatrix4(m) {\n      return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];\n    }\n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n\n\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov / 2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy / 2);\n      return [f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, (zfar + znear) / (znear - zfar), 2 * zfar * znear / (znear - zfar), 0, 0, -1, 0];\n    }\n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n\n\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    var pendingTextureRequests = []; // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n\n    var loadTexture = function () {\n      var cacheTop = 4; // Maximum number of concurrents loads\n\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n\n        var loadFn = function loadFn() {\n          if (self.image.width > 0 && self.image.height > 0) {\n            // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n\n          releaseTextureImageLoader(self);\n        };\n\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      }\n\n      ;\n\n      TextureImageLoader.prototype.loadTexture = function (src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      }\n\n      ;\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else {\n          textureImageCache[cacheTop++] = til;\n        }\n      }\n\n      for (var i = 0; i < cacheTop; i++) {\n        textureImageCache[i] = new TextureImageLoader();\n      }\n\n      return function (node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n\n        if (cacheTop) {\n          textureImageCache[--cacheTop].loadTexture(src, texture, callback);\n        } else {\n          pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));\n        }\n\n        return texture;\n      };\n    }();\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n\n\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function (texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n\n\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n\n      while (newLevel < image.maxLevel && gl.drawingBufferWidth > image.tileResolution * Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707) {\n        newLevel++;\n      } // Apply change\n\n\n      program.level = newLevel;\n    }\n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n\n\n    function rotatePersp(p, r) {\n      return [p[0] * r[0], p[0] * r[1], p[0] * r[2], 0, p[5] * r[4], p[5] * r[5], p[5] * r[6], 0, p[10] * r[8], p[10] * r[9], p[10] * r[10], p[11], -r[8], -r[9], -r[10], 0];\n    }\n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n\n\n    function applyRotPerspToVec(m, v) {\n      return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[4] * v[0] + m[5] * v[1] + m[6] * v[2], m[11] + m[8] * v[0] + m[9] * v[1] + m[10] * v[2], 1 / (m[12] * v[0] + m[13] * v[1] + m[14] * v[2])];\n    }\n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n\n\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0] * vpp[3];\n      var winY = vpp[1] * vpp[3];\n      var winZ = vpp[2] * vpp[3];\n      var ret = [0, 0, 0];\n\n      if (winX < -1) {\n        ret[0] = -1;\n      }\n\n      if (winX > 1) {\n        ret[0] = 1;\n      }\n\n      if (winY < -1) {\n        ret[1] = -1;\n      }\n\n      if (winY > 1) {\n        ret[1] = 1;\n      }\n\n      if (winZ < -1 || winZ > 1) {\n        ret[2] = 1;\n      }\n\n      return ret;\n    }\n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n\n\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n\n      if (testX == -4 || testX == 4) {\n        return false;\n      }\n\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n\n      if (testY == -4 || testY == 4) {\n        return false;\n      }\n\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n    }\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n\n\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  } // Vertex shader for equirectangular and cube\n\n\n  var v = ['attribute vec2 a_texCoord;', 'varying vec2 v_texCoord;', 'void main() {', // Set position\n  'gl_Position = vec4(a_texCoord, 0.0, 1.0);', // Pass the coordinates to the fragment shader\n  'v_texCoord = a_texCoord;', '}'].join(''); // Vertex shader for multires\n\n  var vMulti = ['attribute vec3 a_vertCoord;', 'attribute vec2 a_texCoord;', 'uniform mat4 u_cubeMatrix;', 'uniform mat4 u_perspMatrix;', 'varying mediump vec2 v_texCoord;', 'void main(void) {', // Set position\n  'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);', // Pass the coordinates to the fragment shader\n  'v_texCoord = a_texCoord;', '}'].join(''); // Fragment shader\n\n  var fragEquiCubeBase = ['precision mediump float;', 'uniform float u_aspectRatio;', 'uniform float u_psi;', 'uniform float u_theta;', 'uniform float u_f;', 'uniform float u_h;', 'uniform float u_v;', 'uniform float u_vo;', 'uniform float u_rot;', 'const float PI = 3.14159265358979323846264;', // Texture\n  'uniform sampler2D u_image;', 'uniform samplerCube u_imageCube;', // Coordinates passed in from vertex shader\n  'varying vec2 v_texCoord;', // Background color (display for partial panoramas)\n  'uniform vec4 u_backgroundColor;', 'void main() {', // Map canvas/camera to sphere\n  'float x = v_texCoord.x * u_aspectRatio;', 'float y = v_texCoord.y;', 'float sinrot = sin(u_rot);', 'float cosrot = cos(u_rot);', 'float rot_x = x * cosrot - y * sinrot;', 'float rot_y = x * sinrot + y * cosrot;', 'float sintheta = sin(u_theta);', 'float costheta = cos(u_theta);', 'float a = u_f * costheta - rot_y * sintheta;', 'float root = sqrt(rot_x * rot_x + a * a);', 'float lambda = atan(rot_x / root, a / root) + u_psi;', 'float phi = atan((rot_y * costheta + u_f * sintheta) / root);'].join('\\n'); // Fragment shader\n\n  var fragCube = fragEquiCubeBase + [// Look up color from texture\n  'float cosphi = cos(phi);', 'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));', '}'].join('\\n'); // Fragment shader\n\n  var fragEquirectangular = fragEquiCubeBase + [// Wrap image\n  'lambda = mod(lambda + PI, PI * 2.0) - PI;', // Map texture to sphere\n  'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));', // Look up color from texture\n  // Map from [-1,1] to [0,1] and flip y-axis\n  'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)', 'gl_FragColor = u_backgroundColor;', 'else', 'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));', '}'].join('\\n'); // Fragment shader\n\n  var fragMulti = ['varying mediump vec2 v_texCoord;', 'uniform sampler2D u_sampler;', //'uniform mediump vec4 u_color;',\n  'void main(void) {', // Look up color from texture\n  'gl_FragColor = texture2D(u_sampler, v_texCoord);', //    'gl_FragColor = u_color;',\n  '}'].join('');\n  return {\n    renderer: function renderer(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n}(window, document);","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nwindow.pannellum = function (window, document, undefined) {\n  /**\n  * Creates a new panorama viewer.\n  * @constructor\n  * @param {HTMLElement|string} container - The container (div) element for the\n  *      viewer, or its ID.\n  * @param {Object} initialConfig - Inital configuration for viewer.\n  */\n  function Viewer(container, initialConfig) {\n    var _this = this; // Declare variables\n\n\n    var config,\n        renderer,\n        preview,\n        isUserInteracting = false,\n        latestInteraction = Date.now(),\n        onPointerDownPointerX = 0,\n        onPointerDownPointerY = 0,\n        onPointerDownPointerDist = -1,\n        onPointerDownYaw = 0,\n        onPointerDownPitch = 0,\n        keysDown = new Array(10),\n        fullscreenActive = false,\n        loaded,\n        error = false,\n        isTimedOut = false,\n        listenersAdded = false,\n        panoImage,\n        prevTime,\n        speed = {\n      'yaw': 0,\n      'pitch': 0,\n      'hfov': 0\n    },\n        animating = false,\n        orientation = false,\n        orientationYawOffset = 0,\n        autoRotateStart,\n        autoRotateSpeed = 0,\n        origHfov,\n        origPitch,\n        animatedMove = {},\n        externalEventListeners = {},\n        specifiedPhotoSphereExcludes = [],\n        update = false,\n        // Should we update when still to render dynamic content\n    hotspotsCreated = false;\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189]\n    }; // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n\n    defaultConfig.strings = {\n      // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',\n      // One substitution: author\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',\n      // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" + \"progressive encoded JPEGs work for your device (this \" + \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' + '%spx wide, but your device only supports images up to ' + '%spx wide. Try another device.' + ' (If you\\'re the author, try scaling down the image.)',\n      // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.'\n    }; // Initialize container\n\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0; // Create container for ui\n\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer); // Create container for renderer\n\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix); // Display about information on right click\n\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage); // Create info display\n\n    var infoDisplay = {}; // Hot spot debug indicator\n\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator); // Panorama info\n\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container); // Load box\n\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box); // Error message\n\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg); // Create controls\n\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container); // Load button\n\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function () {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load); // Zoom controls\n\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom); // Fullscreen toggle\n\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled) {\n      controls.container.appendChild(controls.fullscreen);\n    } // Device orientation toggle\n\n\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function (e) {\n      if (orientation) {\n        stopOrientation();\n      } else {\n        startOrientation();\n      }\n    });\n    controls.orientation.addEventListener('mousedown', function (e) {\n      e.stopPropagation();\n    });\n    controls.orientation.addEventListener('touchstart', function (e) {\n      e.stopPropagation();\n    });\n    controls.orientation.addEventListener('pointerdown', function (e) {\n      e.stopPropagation();\n    });\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport,\n        startOrientationIfSupported = false;\n\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n\n        if (startOrientationIfSupported) {\n          startOrientation();\n        }\n      } else {\n        orientationSupport = false;\n      }\n    }\n\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    } // Compass\n\n\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass); // Load and process configuration\n\n    if (initialConfig.firstScene) {\n      // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n      // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n\n    processOptions(true);\n    /**\n    * Initializes viewer.\n    * @private\n    */\n\n    function init() {\n      // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n      // show an error (older versions don't work at all)\n      // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n      var i, p;\n\n      if (config.type == 'cubemap') {\n        panoImage = [];\n\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes)); // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n\n        if (config.basePath && config.multiRes.basePath && !/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath)) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n\n          panoImage = new Image();\n        }\n      } // Configure image loading\n\n\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n\n        var onLoad = function onLoad() {\n          itemsToLoad--;\n\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n\n        var onError = function onError(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n\n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n\n          if (p == \"null\") {\n            // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n\n        if (config.basePath) {\n          p = config.basePath;\n        }\n\n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n\n          panoImage.onload = function () {\n            window.URL.revokeObjectURL(this.src); // Clean up\n\n            onImageLoad();\n          };\n\n          var xhr = new XMLHttpRequest();\n\n          xhr.onloadend = function () {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n\n          xhr.onprogress = function (e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n\n      if (config.draggable) {\n        uiContainer.classList.add('pnlm-grab');\n      }\n\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n    /**\n    * Test if URL is absolute or relative.\n    * @private\n    * @param {string} url - URL to test\n    * @returns {boolean} True if absolute, else false\n    */\n\n\n    function absoluteURL(url) {\n      // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    }\n\n    ;\n    /**\n    * Create renderer and initialize event listeners once image is loaded.\n    * @private\n    */\n\n    function onImageLoad() {\n      if (!renderer) {\n        renderer = new libpannellum.renderer(renderContainer);\n      } // Only add event listeners once\n\n\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n\n        if (document.documentElement.style.pointerAction === '' && document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        } // Deal with MS pointer events\n\n\n        if (window.navigator.pointerEnabled) {\n          container.style.touchAction = 'none';\n        }\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n\n      setTimeout(function () {\n        isTimedOut = true;\n      }, 500);\n    }\n    /**\n    * Parses Google Photo Sphere XMP Metadata.\n    * https://developers.google.com/photo-sphere/metadata/\n    * @private\n    * @param {Image} image - Image to read XMP metadata from.\n    */\n\n\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function () {\n        var img = reader.result; // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n\n          if (flagIndex < 0 || flagIndex > 65536) {\n            anError(config.strings.iOS8WebGLError);\n          }\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12); // Extract the requested tag from the XMP data\n\n          var getTag = function getTag(tag) {\n            var result;\n\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n\n            if (result !== undefined) {\n              return Number(result);\n            }\n\n            return null;\n          }; // Relevant XMP data\n\n\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n\n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null && xmp.fullHeight !== null && xmp.croppedHeight !== null && xmp.topPixels !== null) {\n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0) {\n              config.haov = xmp.croppedWidth / xmp.fullWidth * 360;\n            }\n\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0) {\n              config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;\n            }\n\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0) {\n              config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;\n            }\n\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0) {\n                config.horizonPitch = xmp.horizonPitch;\n              }\n\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0) {\n                config.horizonRoll = xmp.horizonRoll;\n              }\n            } // TODO: add support for initial view settings\n\n          }\n        } // Load panorama\n\n\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n\n      if (reader.readAsBinaryString !== undefined) {\n        reader.readAsBinaryString(image);\n      } else {\n        reader.readAsText(image);\n      }\n    }\n    /**\n    * Displays an error message.\n    * @private\n    * @param {string} errorMsg - Error message to display. If not specified, a\n    *      generic WebGL error is displayed.\n    */\n\n\n    function anError(errorMsg) {\n      if (errorMsg === undefined) {\n        errorMsg = config.strings.genericWebGLError;\n      }\n\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n    /**\n    * Hides error message display.\n    * @private\n    */\n\n\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n    /**\n    * Displays about message.\n    * @private\n    * @param {MouseEvent} event - Right click location\n    */\n\n\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function () {\n        aboutMsg.style.opacity = 0;\n      }, 2000);\n      aboutMessage.t2 = setTimeout(function () {\n        aboutMsg.style.display = 'none';\n      }, 2500);\n      event.preventDefault();\n    }\n    /**\n    * Calculate mouse position relative to top left of viewer container.\n    * @private\n    * @param {MouseEvent} event - Mouse event to use in calculation\n    * @returns {Object} Calculated X and Y coordinates\n    */\n\n\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n    /**\n    * Event handler for mouse clicks. Initializes panning. Prints center and click\n    * location coordinates when hot spot debugging is enabled.\n    * @private\n    * @param {MouseEvent} event - Document mouse down event.\n    */\n\n\n    function onDocumentMouseDown(event) {\n      // Override default action\n      event.preventDefault(); // But not all of it\n\n      container.focus(); // Only do something if the panorama is loaded\n\n      if (!loaded || !config.draggable) {\n        return;\n      } // Calculate mouse position relative to top left of viewer container\n\n\n      var pos = mousePosition(event); // Log pitch / yaw of mouse click when debugging / placing hot spots\n\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' + config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      } // Turn off auto-rotation if enabled\n\n\n      stopAnimation();\n      stopOrientation();\n      config.roll = 0;\n      speed.hfov = 0;\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n      fireEvent('mousedown', event);\n      animateInit();\n    }\n    /**\n    * Event handler for double clicks. Zooms in at clicked location\n    * @private\n    * @param {MouseEvent} event - Document mouse down event.\n    */\n\n\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n    /**\n    * Calculate panorama pitch and yaw from location of mouse event.\n    * @private\n    * @param {MouseEvent} event - Document mouse down event.\n    * @returns {number[]} [pitch, yaw]\n    */\n\n\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x * x + a * a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n\n      if (yaw < -180) {\n        yaw += 360;\n      }\n\n      if (yaw > 180) {\n        yaw -= 360;\n      }\n\n      return [pitch, yaw];\n    }\n    /**\n    * Event handler for mouse moves. Pans center of view.\n    * @private\n    * @param {MouseEvent} event - Document mouse move event.\n    */\n\n\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n            canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event); //TODO: This still isn't quite right\n\n        var yaw = (Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90 + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 360 * Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        var pitch = (Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90 + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n    /**\n    * Event handler for mouse up events. Stops panning.\n    * @private\n    */\n\n\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n\n      isUserInteracting = false;\n\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n      fireEvent('mouseup', event);\n    }\n    /**\n    * Event handler for touches. Initializes panning if one touch or zooming if\n    * two touches.\n    * @private\n    * @param {TouchEvent} event - Document touch start event.\n    */\n\n\n    function onDocumentTouchStart(event) {\n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      } // Turn off auto-rotation if enabled\n\n\n      stopAnimation();\n      stopOrientation();\n      config.roll = 0;\n      speed.hfov = 0; // Calculate touch position relative to top left of viewer container\n\n      var pos0 = mousePosition(event.targetTouches[0]);\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n\n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) + (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n    /**\n    * Event handler for touch movements. Pans center of view if one touch or\n    * adjusts zoom if two touches.\n    * @private\n    * @param {TouchEvent} event - Document touch move event.\n    */\n\n\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      } // Override default action\n\n\n      event.preventDefault();\n\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n\n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) + (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        } // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n\n\n        var touchmovePanSpeedCoeff = config.hfov / 360 * config.touchPanSpeedCoeffFactor;\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n    /**\n    * Event handler for end of touches. Stops panning and/or zooming.\n    * @private\n    */\n\n\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n        pointerCoordinates = [];\n    /**\n    * Event handler for touch starts in IE / Edge.\n    * @private\n    * @param {PointerEvent} event - Document pointer down event.\n    */\n\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({\n          clientX: event.clientX,\n          clientY: event.clientY\n        });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n    /**\n    * Event handler for touch moves in IE / Edge.\n    * @private\n    * @param {PointerEvent} event - Document pointer move event.\n    */\n\n\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n    /**\n    * Event handler for touch ends in IE / Edge.\n    * @private\n    * @param {PointerEvent} event - Document pointer up event.\n    */\n\n\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerIDs[i] = undefined;\n          }\n\n          if (pointerIDs[i]) {\n            defined = true;\n          }\n        }\n\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n\n        event.preventDefault();\n      }\n    }\n    /**\n    * Event handler for mouse wheel. Changes zoom.\n    * @private\n    * @param {WheelEvent} event - Document mouse wheel event.\n    */\n\n\n    function onDocumentMouseWheel(event) {\n      // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || config.mouseZoom == 'fullscreenonly' && !fullscreenActive) {\n        return;\n      }\n\n      event.preventDefault(); // Turn off auto-rotation if enabled\n\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n\n      animateInit();\n    }\n    /**\n    * Event handler for key presses. Updates list of currently pressed keys.\n    * @private\n    * @param {KeyboardEvent} event - Document key press event.\n    */\n\n\n    function onDocumentKeyPress(event) {\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n      stopOrientation();\n      config.roll = 0; // Record key pressed\n\n      var keynumber = event.which || event.keycode; // Override default action for keys that are used\n\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0) {\n        return;\n      }\n\n      event.preventDefault(); // If escape key is pressed\n\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n    /**\n    * Clears list of currently pressed keys.\n    * @private\n    */\n\n\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n    /**\n    * Event handler for key releases. Updates list of currently pressed keys.\n    * @private\n    * @param {KeyboardEvent} event - Document key up event.\n    */\n\n\n    function onDocumentKeyUp(event) {\n      // Record key pressed\n      var keynumber = event.which || event.keycode; // Override default action for keys that are used\n\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0) {\n        return;\n      }\n\n      event.preventDefault(); // Change key\n\n      changeKey(keynumber, false);\n    }\n    /**\n    * Updates list of currently pressed keys.\n    * @private\n    * @param {number} keynumber - Key number.\n    * @param {boolean} value - Whether or not key is pressed.\n    */\n\n\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n\n      switch (keynumber) {\n        // If minus key is released\n        case 109:\n        case 189:\n        case 17:\n        case 173:\n          if (keysDown[0] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[0] = value;\n          break;\n        // If plus key is released\n\n        case 107:\n        case 187:\n        case 16:\n        case 61:\n          if (keysDown[1] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[1] = value;\n          break;\n        // If up arrow is released\n\n        case 38:\n          if (keysDown[2] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[2] = value;\n          break;\n        // If \"w\" is released\n\n        case 87:\n          if (keysDown[6] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[6] = value;\n          break;\n        // If down arrow is released\n\n        case 40:\n          if (keysDown[3] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[3] = value;\n          break;\n        // If \"s\" is released\n\n        case 83:\n          if (keysDown[7] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[7] = value;\n          break;\n        // If left arrow is released\n\n        case 37:\n          if (keysDown[4] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[4] = value;\n          break;\n        // If \"a\" is released\n\n        case 65:\n          if (keysDown[8] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[8] = value;\n          break;\n        // If right arrow is released\n\n        case 39:\n          if (keysDown[5] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[5] = value;\n          break;\n        // If \"d\" is released\n\n        case 68:\n          if (keysDown[9] != value) {\n            keyChanged = true;\n          }\n\n          keysDown[9] = value;\n      }\n\n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n\n        animateInit();\n      }\n    }\n    /**\n    * Pans and/or zooms panorama based on currently pressed keys. Also handles\n    * panorama \"inertia\" and auto rotation.\n    * @private\n    */\n\n\n    function keyRepeat() {\n      // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n      var newTime;\n\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0); // If minus key is down\n\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      } // If plus key is down\n\n\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      } // If up arrow or \"w\" is down\n\n\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      } // If down arrow or \"s\" is down\n\n\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      } // If left arrow or \"a\" is down\n\n\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      } // If right arrow or \"d\" is down\n\n\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown) {\n        latestInteraction = Date.now();\n      } // If auto-rotate\n\n\n      var inactivityInterval = Date.now() - latestInteraction;\n\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        } // Deal with stopping auto rotation after a set delay\n\n\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      } // Animated moves\n\n\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      } // \"Inertia\"\n\n\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85; // Yaw\n\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        } // Pitch\n\n\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        } // Zoom\n\n\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2; // Limit speed\n\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      } // Stop movement if opposite controls are pressed\n\n\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n    /**\n    * Animates moves.\n    * @param {string} axis - Axis to animate\n    * @private\n    */\n\n\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n\n      if (t.endPosition > t.startPosition && result >= t.endPosition || t.endPosition < t.startPosition && result <= t.endPosition || t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n            callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n\n        if (typeof callback === 'function') {\n          callback(callbackArgs);\n        }\n      }\n\n      config[axis] = result;\n    }\n    /**\n    * @param {number} t - Normalized time in animation\n    * @return {number} Position in animation\n    * @private\n    */\n\n\n    function timingFunction(t) {\n      // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    }\n    /**\n    * Event handler for document resizes. Updates viewer size and rerenders view.\n    * @private\n    */\n\n\n    function onDocumentResize() {\n      // Resize panorama renderer (moved to onFullScreenChange)\n      //renderer.resize();\n      //animateInit();\n      // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n    /**\n    * Initializes animation.\n    * @private\n    */\n\n\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n\n      animating = true;\n      animate();\n    }\n    /**\n    * Animates view, using requestAnimationFrame to trigger rendering.\n    * @private\n    */\n\n\n    function animate() {\n      render();\n\n      if (autoRotateStart) {\n        clearTimeout(autoRotateStart);\n      }\n\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] || keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] || keysDown[8] || keysDown[9] || config.autoRotate || animatedMove.pitch || animatedMove.yaw || animatedMove.hfov || Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 || Math.abs(speed.hfov) > 0.01) {\n        keyRepeat();\n\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed && Date.now() - latestInteraction > config.autoRotateInactivityDelay && !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || config.dynamic === true && update)) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay - (Date.now() - latestInteraction);\n\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function () {\n            config.autoRotate = autoRotateSpeed;\n\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n\n          animateInit();\n        }\n      }\n    }\n    /**\n    * Renders panorama view.\n    * @private\n    */\n\n\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        } // Keep a tmp value of yaw for autoRotate comparison later\n\n\n        tmpyaw = config.yaw; // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n\n        var hoffcut = 0,\n            voffcut = 0;\n\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n              hfov2 = config.hfov / 2,\n              vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), canvas.width / canvas.height) * 180 / Math.PI,\n              transposed = config.vaov > config.haov;\n\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI), Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI), Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        } // Ensure the yaw is within min and max allowed\n\n\n        var yawRange = config.maxYaw - config.minYaw,\n            minYaw = -180,\n            maxYaw = 180;\n\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        } // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n\n\n        if (config.autoRotate !== false && tmpyaw != config.yaw && prevTime !== undefined) {\n          // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        } // Ensure the calculated pitch is within min and max allowed\n\n\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) / (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n            maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n\n        if (isNaN(minPitch)) {\n          minPitch = -90;\n        }\n\n        if (isNaN(maxPitch)) {\n          maxPitch = 90;\n        }\n\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, {\n          roll: config.roll * Math.PI / 180\n        });\n        renderHotSpots(); // Update compass\n\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n      }\n    }\n    /**\n    * Creates a new quaternion.\n    * @private\n    * @constructor\n    * @param {Number} w - W value\n    * @param {Number} x - X value\n    * @param {Number} y - Y value\n    * @param {Number} z - Z value\n    */\n\n\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n    /**\n    * Multiplies quaternions.\n    * @private\n    * @param {Quaternion} q - Quaternion to multiply\n    * @returns {Quaternion} Result of multiplication\n    */\n\n\n    Quaternion.prototype.multiply = function (q) {\n      return new Quaternion(this.w * q.w - this.x * q.x - this.y * q.y - this.z * q.z, this.x * q.w + this.w * q.x + this.y * q.z - this.z * q.y, this.y * q.w + this.w * q.y + this.z * q.x - this.x * q.z, this.z * q.w + this.w * q.z + this.x * q.y - this.y * q.x);\n    };\n    /**\n    * Converts quaternion to Euler angles.\n    * @private\n    * @returns {Number[]} [phi angle, theta angle, psi angle]\n    */\n\n\n    Quaternion.prototype.toEulerAngles = function () {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (this.x * this.x + this.y * this.y)),\n          theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n          psi = Math.atan2(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n    /**\n    * Converts device orientation API Tait-Bryan angles to a quaternion.\n    * @private\n    * @param {Number} alpha - Alpha angle (in degrees)\n    * @param {Number} beta - Beta angle (in degrees)\n    * @param {Number} gamma - Gamma angle (in degrees)\n    * @returns {Quaternion} Orientation quaternion\n    */\n\n\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0, gamma ? gamma * Math.PI / 180 / 2 : 0, alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n          s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n      return new Quaternion(c[0] * c[1] * c[2] - s[0] * s[1] * s[2], s[0] * c[1] * c[2] - c[0] * s[1] * s[2], c[0] * s[1] * c[2] + s[0] * c[1] * s[2], c[0] * c[1] * s[2] + s[0] * s[1] * c[2]);\n    }\n    /**\n    * Computes current device orientation quaternion from device orientation API\n    * Tait-Bryan angles.\n    * @private\n    * @param {Number} alpha - Alpha angle (in degrees)\n    * @param {Number} beta - Beta angle (in degrees)\n    * @param {Number} gamma - Gamma angle (in degrees)\n    * @returns {Quaternion} Orientation quaternion\n    */\n\n\n    function computeQuaternion(alpha, beta, gamma) {\n      // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma); // Apply world transform\n\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0)); // Apply screen transform\n\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n    /**\n    * Event handler for device orientation API. Controls pointing.\n    * @private\n    * @param {DeviceOrientationEvent} event - Device orientation event.\n    */\n\n\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n\n      if (typeof orientation === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n    /**\n    * Initializes renderer.\n    * @private\n    */\n\n\n    function renderInit() {\n      try {\n        var params = {};\n\n        if (config.horizonPitch !== undefined) {\n          params.horizonPitch = config.horizonPitch * Math.PI / 180;\n        }\n\n        if (config.horizonRoll !== undefined) {\n          params.horizonRoll = config.horizonRoll * Math.PI / 180;\n        }\n\n        if (config.backgroundColor !== undefined) {\n          params.backgroundColor = config.backgroundColor;\n        }\n\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n    /**\n    * Triggered when render initialization finishes. Handles fading between\n    * scenes as well as showing the compass and hotspots and hiding the loading\n    * display.\n    * @private\n    */\n\n\n    function renderInitCallback() {\n      // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0; // Remove image\n\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function () {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      } // Show compass if applicable\n\n\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      } // Show hotspots\n\n\n      createHotSpots(); // Hide loading display\n\n      infoDisplay.load.box.style.display = 'none';\n\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n\n      loaded = true;\n      fireEvent('load');\n      animateInit();\n    }\n    /**\n    * Creates hot spot element for the current scene.\n    * @private\n    * @param {Object} hs - The configuration for the hotspot\n    */\n\n\n    function createHotSpot(hs) {\n      // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n\n      if (hs.cssClass) {\n        div.className += ' ' + hs.cssClass;\n      } else {\n        div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);\n      }\n\n      var span = document.createElement('span');\n\n      if (hs.text) {\n        span.innerHTML = escapeHTML(hs.text);\n      }\n\n      var a;\n\n      if (hs.video) {\n        var video = document.createElement('video'),\n            p = hs.video;\n\n        if (config.basePath && !absoluteURL(p)) {\n          p = config.basePath + p;\n        }\n\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n\n        if (config.basePath && !absoluteURL(p)) {\n          p = config.basePath + p;\n        }\n\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function () {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n\n            return false;\n          };\n\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function (e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n\n      hs.div = div;\n    }\n\n    ;\n    /**\n    * Creates hot spot elements for the current scene.\n    * @private\n    */\n\n    function createHotSpots() {\n      if (hotspotsCreated) {\n        return;\n      }\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function (a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n    /**\n    * Destroys currently created hot spot elements.\n    * @private\n    */\n\n\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n    /**\n    * Renders hot spot, updating its position and visibility.\n    * @private\n    */\n\n\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n          hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n          configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n          configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n          yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n\n      if (hs.yaw <= 90 && hs.yaw > -90 && z <= 0 || (hs.yaw > 90 || hs.yaw <= -90) && z <= 0) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n            hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible'; // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n\n        var canvas = renderer.getCanvas(),\n            canvasWidth = canvas.clientWidth,\n            canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2, -canvasWidth / hfovTan * (hsPitchSin * configPitchCos - hsPitchCos * yawCos * configPitchSin) / z / 2]; // Apply roll\n\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n            rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin, coord[0] * rollSin + coord[1] * rollCos]; // Apply transform\n\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] + 'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n    /**\n    * Renders hot spots, updating their positions and visibility.\n    * @private\n    */\n\n\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n    /**\n    * Merges a scene configuration into the current configuration.\n    * @private\n    * @param {string} sceneId - Identifier of scene configuration to merge in.\n    */\n\n\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = []; // Merge default config\n\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      } // Merge default scene config\n\n\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      } // Merge current scene config\n\n\n      if (sceneId !== null && sceneId !== '' && initialConfig.scenes && initialConfig.scenes[sceneId]) {\n        var scene = initialConfig.scenes[sceneId];\n\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n\n        config.scene = sceneId;\n      } // Merge initial config\n\n\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n    /**\n    * Processes configuration options.\n    * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n    * @private\n    */\n\n\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false; // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n\n        if (config.basePath && !absoluteURL(p)) {\n          p = config.basePath + p;\n        }\n\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      } // Handle different preview values\n\n\n      var title = config.title,\n          author = config.author;\n\n      if (isPreview) {\n        if ('previewTitle' in config) {\n          config.title = config.previewTitle;\n        }\n\n        if ('previewAuthor' in config) {\n          config.author = config.previewAuthor;\n        }\n      } // Reset title / author display\n\n\n      if (!config.hasOwnProperty('title')) {\n        infoDisplay.title.innerHTML = '';\n      }\n\n      if (!config.hasOwnProperty('author')) {\n        infoDisplay.author.innerHTML = '';\n      }\n\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author')) {\n        infoDisplay.container.style.display = 'none';\n      } // Fill in load button label and loading box text\n\n\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel; // Process other options\n\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n\n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n\n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n\n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n\n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline'; // Hide load button\n\n                controls.load.style.display = 'none'; // Initialize\n\n                init();\n              }\n\n              break;\n\n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document || 'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key]) {\n                hotSpotDebugIndicator.style.display = 'block';\n              } else {\n                hotSpotDebugIndicator.style.display = 'none';\n              }\n\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined) {\n                  startOrientationIfSupported = true;\n                } else if (orientationSupport === true) {\n                  startOrientation();\n                }\n              }\n\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title) {\n          config.title = title;\n        } else {\n          delete config.title;\n        }\n\n        if (author) {\n          config.author = author;\n        } else {\n          delete config.author;\n        }\n      }\n    }\n    /**\n    * Toggles fullscreen mode.\n    * @private\n    */\n\n\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {// Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n    /**\n    * Event handler for fullscreen changes.\n    * @private\n    */\n\n\n    function onFullScreenChange() {\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      } // Resize renderer (deal with browser quirks and fixes #155)\n\n\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n    /**\n    * Increases panorama zoom. For use with zoom button.\n    * @private\n    */\n\n\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n    /**\n    * Decreases panorama zoom. For use with zoom button.\n    * @private\n    */\n\n\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n    /**\n    * Clamps horzontal field of view to viewer's limits.\n    * @private\n    * @param {number} hfov - Input horizontal field of view (in degrees)\n    * @return {number} - Clamped horizontal field of view (in degrees)\n    */\n\n\n    function constrainHfov(hfov) {\n      // Keep field of view within bounds\n      var minHfov = config.minHfov;\n\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n\n      var newHfov = config.hfov;\n\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      } // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n\n\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov, Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) / canvas.height * canvas.width) * 360 / Math.PI);\n      }\n\n      return newHfov;\n    }\n    /**\n    * Sets viewer's horizontal field of view.\n    * @private\n    * @param {number} hfov - Desired horizontal field of view in degrees.\n    */\n\n\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n    /**\n    * Stops auto rotation and animated moves.\n    * @private\n    */\n\n\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n    /**\n    * Loads panorama.\n    * @private\n    */\n\n\n    function load() {\n      // Since WebGL error handling is very general, first we clear any error box\n      // since it is a new scene and the error from previous maybe because of lacking\n      // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n    /**\n    * Loads scene.\n    * @private\n    * @param {string} sceneId - Identifier of scene configuration to merge in.\n    * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n    * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n    * @param {number} targetHfov - HFOV viewer should use once scene loads.\n    * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n    */\n\n\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {}; // Set up fade if specified\n\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, {\n          returnImage: true\n        });\n\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + config.sceneFadeDuration / 1000 + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n\n          fadeImg.onload = function () {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      } // Set new pointing\n\n\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      } // Destroy hot spots from previous scene\n\n\n      destroyHotSpots(); // Create the new config for the scene\n\n      mergeConfig(sceneId); // Stop motion\n\n      speed.yaw = speed.pitch = speed.hfov = 0; // Reload scene\n\n      processOptions();\n\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n    /**\n    * Stop using device orientation.\n    * @private\n    */\n\n\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n    /**\n    * Start using device orientation.\n    * @private\n    */\n\n\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n    /**\n    * Escapes HTML string (to mitigate possible DOM XSS attacks).\n    * @private\n    * @param {string} s - String to escape\n    * @returns {string} Escaped string\n    */\n\n\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML) {\n        return String(s).split('\\n').join('<br>');\n      }\n\n      return String(s).split(/&/g).join('&amp;').split('\"').join('&quot;').split(\"'\").join('&#39;').split('<').join('&lt;').split('>').join('&gt;').split('/').join('&#x2f;').split('\\n').join('<br>'); // Allow line breaks\n    }\n    /**\n    * Removes possibility of XSS attacks with URLs.\n    * The URL cannot be of protocol 'javascript'.\n    * @private\n    * @param {string} url - URL to sanitize\n    * @returns {string} Sanitized URL\n    */\n\n\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n\n      return url;\n    }\n    /**\n    * Removes possibility of XSS atacks with URLs for CSS.\n    * The URL will be sanitized with `sanitizeURL()` and single quotes\n    * and double quotes escaped.\n    * @private\n    * @param {string} url - URL to sanitize\n    * @returns {string} Sanitized URL\n    */\n\n\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url).replace(/\"/g, '%22').replace(/'/g, '%27');\n    }\n    /**\n    * Checks whether or not a panorama is loaded.\n    * @memberof Viewer\n    * @instance\n    * @returns {boolean} `true` if a panorama is loaded, else `false`\n    */\n\n\n    this.isLoaded = function () {\n      return Boolean(loaded);\n    };\n    /**\n    * Returns the pitch of the center of the view.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} Pitch in degrees\n    */\n\n\n    this.getPitch = function () {\n      return config.pitch;\n    };\n    /**\n    * Sets the pitch of the center of the view.\n    * @memberof Viewer\n    * @instance\n    * @param {number} pitch - Pitch in degrees\n    * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n    * @param {function} [callback] - Function to call when animation finishes\n    * @param {object} [callbackArgs] - Arguments to pass to callback function\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setPitch = function (pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000 : Number(animated);\n\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n\n      animateInit();\n      return this;\n    };\n    /**\n    * Returns the minimum and maximum allowed pitches (in degrees).\n    * @memberof Viewer\n    * @instance\n    * @returns {number[]} [minimum pitch, maximum pitch]\n    */\n\n\n    this.getPitchBounds = function () {\n      return [config.minPitch, config.maxPitch];\n    };\n    /**\n    * Set the minimum and maximum allowed pitches (in degrees).\n    * @memberof Viewer\n    * @instance\n    * @param {number[]} bounds - [minimum pitch, maximum pitch]\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setPitchBounds = function (bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n    /**\n    * Returns the yaw of the center of the view.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} Yaw in degrees\n    */\n\n\n    this.getYaw = function () {\n      return config.yaw;\n    };\n    /**\n    * Sets the yaw of the center of the view.\n    * @memberof Viewer\n    * @instance\n    * @param {number} yaw - Yaw in degrees [-180, 180]\n    * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n    * @param {function} [callback] - Function to call when animation finishes\n    * @param {object} [callbackArgs] - Arguments to pass to callback function\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setYaw = function (yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000 : Number(animated);\n      yaw = (yaw + 180) % 360 - 180; // Keep in bounds\n\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180) {\n          yaw += 360;\n        } else if (yaw - config.yaw > 180) {\n          yaw -= 360;\n        }\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n\n      animateInit();\n      return this;\n    };\n    /**\n    * Returns the minimum and maximum allowed pitches (in degrees).\n    * @memberof Viewer\n    * @instance\n    * @returns {number[]} [yaw pitch, maximum yaw]\n    */\n\n\n    this.getYawBounds = function () {\n      return [config.minYaw, config.maxYaw];\n    };\n    /**\n    * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n    * @memberof Viewer\n    * @instance\n    * @param {number[]} bounds - [minimum yaw, maximum yaw]\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setYawBounds = function (bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n    /**\n    * Returns the horizontal field of view.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} Horizontal field of view in degrees\n    */\n\n\n    this.getHfov = function () {\n      return config.hfov;\n    };\n    /**\n    * Sets the horizontal field of view.\n    * @memberof Viewer\n    * @instance\n    * @param {number} hfov - Horizontal field of view in degrees\n    * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n    * @param {function} [callback] - Function to call when animation finishes\n    * @param {object} [callbackArgs] - Arguments to pass to callback function\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setHfov = function (hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000 : Number(animated);\n\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n\n      animateInit();\n      return this;\n    };\n    /**\n    * Returns the minimum and maximum allowed horizontal fields of view\n    * (in degrees).\n    * @memberof Viewer\n    * @instance\n    * @returns {number[]} [minimum hfov, maximum hfov]\n    */\n\n\n    this.getHfovBounds = function () {\n      return [config.minHfov, config.maxHfov];\n    };\n    /**\n    * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n    * @memberof Viewer\n    * @instance\n    * @param {number[]} bounds - [minimum hfov, maximum hfov]\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setHfovBounds = function (bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n    /**\n    * Set a new view. Any parameters not specified remain the same.\n    * @memberof Viewer\n    * @instance\n    * @param {number} [pitch] - Target pitch\n    * @param {number} [yaw] - Target yaw\n    * @param {number} [hfov] - Target hfov\n    * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n    * @param {function} [callback] - Function to call when animation finishes\n    * @param {object} [callbackArgs] - Arguments to pass to callback function\n    * @returns {Viewer} `this`\n    */\n\n\n    this.lookAt = function (pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000 : Number(animated);\n\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n\n      if (hfov !== undefined) {\n        this.setHfov(hfov, animated, callback, callbackArgs);\n      }\n\n      return this;\n    };\n    /**\n    * Returns the panorama's north offset.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} North offset in degrees\n    */\n\n\n    this.getNorthOffset = function () {\n      return config.northOffset;\n    };\n    /**\n    * Sets the panorama's north offset.\n    * @memberof Viewer\n    * @instance\n    * @param {number} heading - North offset in degrees\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setNorthOffset = function (heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n    /**\n    * Returns the panorama's horizon roll.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} Horizon roll in degrees\n    */\n\n\n    this.getHorizonRoll = function () {\n      return config.horizonRoll;\n    };\n    /**\n    * Sets the panorama's horizon roll.\n    * @memberof Viewer\n    * @instance\n    * @param {number} roll - Horizon roll in degrees [-90, 90]\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setHorizonRoll = function (roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n    /**\n    * Returns the panorama's horizon pitch.\n    * @memberof Viewer\n    * @instance\n    * @returns {number} Horizon pitch in degrees\n    */\n\n\n    this.getHorizonPitch = function () {\n      return config.horizonPitch;\n    };\n    /**\n    * Sets the panorama's horizon pitch.\n    * @memberof Viewer\n    * @instance\n    * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setHorizonPitch = function (pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n    /**\n    * Start auto rotation.\n    * @memberof Viewer\n    * @instance\n    * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n    * @returns {Viewer} `this`\n    */\n\n\n    this.startAutoRotate = function (speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n\n      animateInit();\n      return this;\n    };\n    /**\n    * Stop auto rotation.\n    * @memberof Viewer\n    * @instance\n    * @returns {Viewer} `this`\n    */\n\n\n    this.stopAutoRotate = function () {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n    /**\n    * Returns the panorama renderer.\n    * @memberof Viewer\n    * @instance\n    * @returns {Renderer}\n    */\n\n\n    this.getRenderer = function () {\n      return renderer;\n    };\n    /**\n    * Sets update flag for dynamic content.\n    * @memberof Viewer\n    * @instance\n    * @param {boolean} bool - Whether or not viewer should update even when still\n    * @returns {Viewer} `this`\n    */\n\n\n    this.setUpdate = function (bool) {\n      update = bool === true;\n\n      if (renderer === undefined) {\n        onImageLoad();\n      } else {\n        animateInit();\n      }\n\n      return this;\n    };\n    /**\n    * Calculate panorama pitch and yaw from location of mouse event.\n    * @memberof Viewer\n    * @instance\n    * @param {MouseEvent} event - Document mouse down event.\n    * @returns {number[]} [pitch, yaw]\n    */\n\n\n    this.mouseEventToCoords = function (event) {\n      return mouseEventToCoords(event);\n    };\n    /**\n    * Change scene being viewed.\n    * @memberof Viewer\n    * @instance\n    * @param {string} sceneId - Identifier of scene to switch to.\n    * @param {number} [pitch] - Pitch to use with new scene\n    * @param {number} [yaw] - Yaw to use with new scene\n    * @param {number} [hfov] - HFOV to use with new scene\n    * @returns {Viewer} `this`\n    */\n\n\n    this.loadScene = function (sceneId, pitch, yaw, hfov) {\n      if (loaded !== false) {\n        loadScene(sceneId, pitch, yaw, hfov);\n      }\n\n      return this;\n    };\n    /**\n    * Get ID of current scene.\n    * @memberof Viewer\n    * @instance\n    * @returns {string} ID of current scene\n    */\n\n\n    this.getScene = function () {\n      return config.scene;\n    };\n    /**\n    * Add a new scene.\n    * @memberof Viewer\n    * @instance\n    * @param {string} sceneId - The ID of the new scene\n    * @param {string} config - The configuration of the new scene\n    * @returns {Viewer} `this`\n    */\n\n\n    this.addScene = function (sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n    /**\n    * Remove a scene.\n    * @memberof Viewer\n    * @instance\n    * @param {string} sceneId - The ID of the scene\n    * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n    */\n\n\n    this.removeScene = function (sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId)) {\n        return false;\n      }\n\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n    /**\n    * Toggle fullscreen.\n    * @memberof Viewer\n    * @instance\n    * @returns {Viewer} `this`\n    */\n\n\n    this.toggleFullscreen = function () {\n      toggleFullscreen();\n      return this;\n    };\n    /**\n    * Get configuration of current scene.\n    * @memberof Viewer\n    * @instance\n    * @returns {Object} Configuration of current scene\n    */\n\n\n    this.getConfig = function () {\n      return config;\n    };\n    /**\n    * Get viewer's container element.\n    * @memberof Viewer\n    * @instance\n    * @returns {HTMLElement} Container `div` element\n    */\n\n\n    this.getContainer = function () {\n      return container;\n    };\n    /**\n    * Add a new hot spot.\n    * @memberof Viewer\n    * @instance\n    * @param {Object} hs - The configuration for the hot spot\n    * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n    * @returns {Viewer} `this`\n    * @throws Throws an error if the scene ID is provided but invalid\n    */\n\n\n    this.addHotSpot = function (hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n\n            if (id == config.scene) {\n              config.hotSpots = initialConfig.scenes[id].hotSpots;\n            } // Link to current config\n\n          }\n\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n\n        if (loaded) {\n          renderHotSpot(hs);\n        }\n      }\n\n      return this;\n    };\n    /**\n    * Remove a hot spot.\n    * @memberof Viewer\n    * @instance\n    * @param {string} hotSpotId - The ID of the hot spot\n    * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n    * @returns {boolean} True if deletion is successful, else false\n    */\n\n\n    this.removeHotSpot = function (hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots) {\n          return false;\n        }\n\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') && config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n\n            while (current.parentNode != renderContainer) {\n              current = current.parentNode;\n            }\n\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div; // Remove hot spot from configuration\n\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots')) {\n            return false;\n          }\n\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') && initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n    /**\n    * This method should be called if the viewer's container is resized.\n    * @memberof Viewer\n    * @instance\n    */\n\n\n    this.resize = function () {\n      if (renderer) {\n        onDocumentResize();\n      }\n    };\n    /**\n    * Check if a panorama is loaded.\n    * @memberof Viewer\n    * @instance\n    * @returns {boolean} True if a panorama is loaded, else false\n    */\n\n\n    this.isLoaded = function () {\n      return loaded;\n    };\n    /**\n    * Check if device orientation control is supported.\n    * @memberof Viewer\n    * @instance\n    * @returns {boolean} True if supported, else false\n    */\n\n\n    this.isOrientationSupported = function () {\n      return orientationSupport || false;\n    };\n    /**\n    * Stop using device orientation.\n    * @memberof Viewer\n    * @instance\n    */\n\n\n    this.stopOrientation = function () {\n      stopOrientation();\n    };\n    /**\n    * Start using device orientation (does nothing if not supported).\n    * @memberof Viewer\n    * @instance\n    */\n\n\n    this.startOrientation = function () {\n      if (orientationSupport) {\n        startOrientation();\n      }\n    };\n    /**\n    * Check if device orientation control is currently activated.\n    * @memberof Viewer\n    * @instance\n    * @returns {boolean} True if active, else false\n    */\n\n\n    this.isOrientationActive = function () {\n      return Boolean(orientation);\n    };\n    /**\n    * Subscribe listener to specified event.\n    * @memberof Viewer\n    * @instance\n    * @param {string} type - Type of event to subscribe to.\n    * @param {Function} listener - Listener function to subscribe to event.\n    * @returns {Viewer} `this`\n    */\n\n\n    this.on = function (type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n    /**\n    * Remove an event listener (or listeners).\n    * @memberof Viewer\n    * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n    * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n    * @returns {Viewer} `this`\n    */\n\n\n    this.off = function (type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n\n      return this;\n    };\n    /**\n    * Fire listeners attached to specified event.\n    * @private\n    * @param {string} [type] - Type of event to fire listeners for.\n    */\n\n\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n    /**\n    * Destructor.\n    * @instance\n    * @memberof Viewer\n    */\n\n\n    this.destroy = function () {\n      if (renderer) {\n        renderer.destroy();\n      }\n\n      ;\n\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n  }\n\n  return {\n    viewer: function viewer(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n}(window, document);","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = function () {\n    return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (\n    /* function FrameRequestCallback */\n    callback,\n    /* DOMElement Element */\n    element) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n  }();\n}","'use strict';\n\nvar keys = require('object-keys');\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n  var obj = {};\n\n  try {\n    origDefineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\n    for (var _ in obj) {\n      // jscs:ignore disallowUnusedVariables\n      return false;\n    }\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    origDefineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function defineProperties(object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = concat.call(props, Object.getOwnPropertySymbols(map));\n  }\n\n  for (var i = 0; i < props.length; i += 1) {\n    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n  }\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n  var str = toStr.call(value);\n  var isArgs = str === '[object Arguments]';\n\n  if (!isArgs) {\n    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n  }\n\n  return isArgs;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar ES = require('es-abstract/es5');\n\nvar replace = bind.call(Function.call, String.prototype.replace);\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n  var S = ES.ToString(ES.CheckObjectCoercible(this));\n  return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};","'use strict';\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor ? function () {\n  return Object.getOwnPropertyDescriptor(arguments, 'callee').get;\n}() : function () {\n  throw new TypeError();\n};\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) {\n  return x.__proto__;\n}; // eslint-disable-line no-proto\n\n\nvar generator; // = function * () {};\n\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\n\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\n\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  '$ %Array%': Array,\n  '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n  '$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n  '$ %ArrayPrototype%': Array.prototype,\n  '$ %ArrayProto_entries%': Array.prototype.entries,\n  '$ %ArrayProto_forEach%': Array.prototype.forEach,\n  '$ %ArrayProto_keys%': Array.prototype.keys,\n  '$ %ArrayProto_values%': Array.prototype.values,\n  '$ %AsyncFromSyncIteratorPrototype%': undefined,\n  '$ %AsyncFunction%': asyncFunction,\n  '$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n  '$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n  '$ %AsyncGeneratorFunction%': asyncGenFunction,\n  '$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n  '$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n  '$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '$ %Boolean%': Boolean,\n  '$ %BooleanPrototype%': Boolean.prototype,\n  '$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n  '$ %Date%': Date,\n  '$ %DatePrototype%': Date.prototype,\n  '$ %decodeURI%': decodeURI,\n  '$ %decodeURIComponent%': decodeURIComponent,\n  '$ %encodeURI%': encodeURI,\n  '$ %encodeURIComponent%': encodeURIComponent,\n  '$ %Error%': Error,\n  '$ %ErrorPrototype%': Error.prototype,\n  '$ %eval%': eval,\n  // eslint-disable-line no-eval\n  '$ %EvalError%': EvalError,\n  '$ %EvalErrorPrototype%': EvalError.prototype,\n  '$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n  '$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n  '$ %Function%': Function,\n  '$ %FunctionPrototype%': Function.prototype,\n  '$ %Generator%': generator ? getProto(generator()) : undefined,\n  '$ %GeneratorFunction%': generatorFunction,\n  '$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n  '$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n  '$ %isFinite%': isFinite,\n  '$ %isNaN%': isNaN,\n  '$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '$ %JSON%': JSON,\n  '$ %JSONParse%': JSON.parse,\n  '$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n  '$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n  '$ %Math%': Math,\n  '$ %Number%': Number,\n  '$ %NumberPrototype%': Number.prototype,\n  '$ %Object%': Object,\n  '$ %ObjectPrototype%': Object.prototype,\n  '$ %ObjProto_toString%': Object.prototype.toString,\n  '$ %ObjProto_valueOf%': Object.prototype.valueOf,\n  '$ %parseFloat%': parseFloat,\n  '$ %parseInt%': parseInt,\n  '$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n  '$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n  '$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n  '$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n  '$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n  '$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '$ %RangeError%': RangeError,\n  '$ %RangeErrorPrototype%': RangeError.prototype,\n  '$ %ReferenceError%': ReferenceError,\n  '$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n  '$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '$ %RegExp%': RegExp,\n  '$ %RegExpPrototype%': RegExp.prototype,\n  '$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n  '$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n  '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n  '$ %String%': String,\n  '$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n  '$ %StringPrototype%': String.prototype,\n  '$ %Symbol%': hasSymbols ? Symbol : undefined,\n  '$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n  '$ %SyntaxError%': SyntaxError,\n  '$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n  '$ %ThrowTypeError%': ThrowTypeError,\n  '$ %TypedArray%': TypedArray,\n  '$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n  '$ %TypeError%': TypeError,\n  '$ %TypeErrorPrototype%': TypeError.prototype,\n  '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n  '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n  '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n  '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n  '$ %URIError%': URIError,\n  '$ %URIErrorPrototype%': URIError.prototype,\n  '$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n  '$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n  '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new TypeError('\"allowMissing\" argument must be a boolean');\n  }\n\n  var key = '$ ' + name;\n\n  if (!(key in INTRINSICS)) {\n    throw new SyntaxError('intrinsic ' + name + ' does not exist!');\n  } // istanbul ignore if // hopefully this is impossible to test :-)\n\n\n  if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n    throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n  }\n\n  return INTRINSICS[key];\n};","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = \"\\u200B\";\n\nmodule.exports = function getPolyfill() {\n  if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n    return String.prototype.trim;\n  }\n\n  return implementation;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n(function () {\n  var i;\n  types = {\n    avc1: [],\n    // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [],\n    // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n  AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // entry_count\n  0x00, 0x00, 0x00, 0x0c, // entry_size\n  0x75, 0x72, 0x6c, 0x20, // 'url' type\n  0x00, // version 0\n  0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, // balance, 0 means centered\n  0x00, 0x00 // reserved\n  ]);\n  STCO = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // sample_size\n  0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x01, // flags\n  0x00, 0x00, // graphicsmode\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n  ]);\n})();\n\nbox = function box(type) {\n  var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length; // calculate the total size we need to allocate\n\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4); // copy the payload into the result\n\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n\n  return result;\n};\n\ndinf = function dinf() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function esds(track) {\n  return box(types.esds, new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  // ES_Descriptor\n  0x03, // tag, ES_DescrTag\n  0x19, // length\n  0x00, 0x00, // ES_ID\n  0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n  // DecoderConfigDescriptor\n  0x04, // tag, DecoderConfigDescrTag\n  0x11, // length\n  0x40, // object type\n  0x15, // streamType\n  0x00, 0x06, 0x00, // bufferSizeDB\n  0x00, 0x00, 0xda, 0xc0, // maxBitrate\n  0x00, 0x00, 0xda, 0xc0, // avgBitrate\n  // DecoderSpecificInfo\n  0x05, // tag, DecoderSpecificInfoTag\n  0x02, // length\n  // ISO/IEC 14496-3, AudioSpecificConfig\n  // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n  track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function ftyp() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function hdlr(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\n\nmdat = function mdat(data) {\n  return box(types.mdat, data);\n};\n\nmdhd = function mdhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x02, // creation_time\n  0x00, 0x00, 0x00, 0x03, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n  0x55, 0xc4, // 'und' language (undetermined)\n  0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n\n  if (track.samplerate) {\n    result[12] = track.samplerate >>> 24 & 0xFF;\n    result[13] = track.samplerate >>> 16 & 0xFF;\n    result[14] = track.samplerate >>> 8 & 0xFF;\n    result[15] = track.samplerate & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\n\nmdia = function mdia(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\n\nmfhd = function mfhd(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n  (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n  ]));\n};\n\nminf = function minf(track) {\n  return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n};\n\nmoof = function moof(sequenceNumber, tracks) {\n  var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n\n  return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\n\n\nmoov = function moov(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\n\nmvex = function mvex(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n\n  return box.apply(null, [types.mvex].concat(boxes));\n};\n\nmvhd = function mvhd(duration) {\n  var bytes = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // creation_time\n  0x00, 0x00, 0x00, 0x02, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n  0x00, 0x01, 0x00, 0x00, // 1.0 rate\n  0x01, 0x00, // 1.0 volume\n  0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n  0xff, 0xff, 0xff, 0xff // next_track_ID\n  ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function sdtp(track) {\n  var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n  // write the sample table\n\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n    bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n  }\n\n  return box(types.sdtp, bytes);\n};\n\nstbl = function stbl(track) {\n  return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n};\n\n(function () {\n  var videoSample, audioSample;\n\n  stsd = function stsd(track) {\n    return box(types.stsd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function videoSample(track) {\n    var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i; // assemble the SPSs\n\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    } // assemble the PPSs\n\n\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push(pps[i].byteLength & 0xFF);\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    (track.width & 0xff00) >> 8, track.width & 0xff, // width\n    (track.height & 0xff00) >> 8, track.height & 0xff, // height\n    0x00, 0x48, 0x00, 0x00, // horizresolution\n    0x00, 0x48, 0x00, 0x00, // vertresolution\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // frame_count\n    0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n    0x00, 0x18, // depth = 24\n    0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n    track.profileIdc, // AVCProfileIndication\n    track.profileCompatibility, // profile_compatibility\n    track.levelIdc, // AVCLevelIndication\n    0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n    box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n    0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  };\n\n  audioSample = function audioSample(track) {\n    return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    // AudioSampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n    (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n    // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n})();\n\ntkhd = function tkhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x07, // flags\n  0x00, 0x00, 0x00, 0x00, // creation_time\n  0x00, 0x00, 0x00, 0x00, // modification_time\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x00, // reserved\n  (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, // layer\n  0x00, 0x00, // alternate_group\n  0x01, 0x00, // non-audio track volume\n  0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n  (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n  ]);\n  return box(types.tkhd, result);\n};\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\n\n\ntraf = function traf(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x3a, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x00, 0x00, 0x00 // default_sample_flags\n  ]));\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n  0x00, 0x00, 0x00, // flags\n  // baseMediaDecodeTime\n  upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n\n  dataOffset = 32 + // tfhd\n  20 + // tfdt\n  8 + // traf header\n  16 + // mfhd\n  8 + // moof header\n  8; // mdat header\n  // audio tracks require less metadata\n\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n  } // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n\n\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n  return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n};\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\n\n\ntrak = function trak(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak, tkhd(track), mdia(track));\n};\n\ntrex = function trex(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]); // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function () {\n  var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n  trunHeader = function trunHeader(samples, offset) {\n    var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [0x00, // version 0\n    0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n    (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n    (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function videoTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 16 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n      sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n      (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function audioTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 8 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function trun(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n})();\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function initSegment(tracks) {\n    var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\n\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function CaptionStream() {\n  CaptionStream.prototype.init.call(this);\n  this.captionPackets_ = [];\n  this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n  this.reset(); // forward data and done events from CCs to this CaptionStream\n\n  this.ccStreams_.forEach(function (cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n};\n\nCaptionStream.prototype = new Stream();\n\nCaptionStream.prototype.push = function (event) {\n  var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  } // parse the sei\n\n\n  sei = cea708Parser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  } // parse out the user data payload\n\n\n  userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n  if (!userData) {\n    return;\n  } // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n\n\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n    this.numSameDts_--;\n\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n\n    return;\n  } // parse out CC data packets and save them for later\n\n\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function () {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  } // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n\n\n  this.captionPackets_.forEach(function (elem, idx) {\n    elem.presortIndex = idx;\n  }); // sort caption byte-pairs based on their PTS values\n\n  this.captionPackets_.sort(function (a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n\n    return a.pts - b.pts;\n  });\n  this.captionPackets_.forEach(function (packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    } // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n\n  }, this);\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function (cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function () {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function (ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function (packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1000;\n};\n\nCaptionStream.prototype.setsChannel2Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1800;\n}; // ----------------------\n// Session to Application\n// ----------------------\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\n\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  // á\n  0x5c: 0xe9,\n  // é\n  0x5e: 0xed,\n  // í\n  0x5f: 0xf3,\n  // ó\n  0x60: 0xfa,\n  // ú\n  0x7b: 0xe7,\n  // ç\n  0x7c: 0xf7,\n  // ÷\n  0x7d: 0xd1,\n  // Ñ\n  0x7e: 0xf1,\n  // ñ\n  0x7f: 0x2588,\n  // █\n  0x0130: 0xae,\n  // ®\n  0x0131: 0xb0,\n  // °\n  0x0132: 0xbd,\n  // ½\n  0x0133: 0xbf,\n  // ¿\n  0x0134: 0x2122,\n  // ™\n  0x0135: 0xa2,\n  // ¢\n  0x0136: 0xa3,\n  // £\n  0x0137: 0x266a,\n  // ♪\n  0x0138: 0xe0,\n  // à\n  0x0139: 0xa0,\n  //\n  0x013a: 0xe8,\n  // è\n  0x013b: 0xe2,\n  // â\n  0x013c: 0xea,\n  // ê\n  0x013d: 0xee,\n  // î\n  0x013e: 0xf4,\n  // ô\n  0x013f: 0xfb,\n  // û\n  0x0220: 0xc1,\n  // Á\n  0x0221: 0xc9,\n  // É\n  0x0222: 0xd3,\n  // Ó\n  0x0223: 0xda,\n  // Ú\n  0x0224: 0xdc,\n  // Ü\n  0x0225: 0xfc,\n  // ü\n  0x0226: 0x2018,\n  // ‘\n  0x0227: 0xa1,\n  // ¡\n  0x0228: 0x2a,\n  // *\n  0x0229: 0x27,\n  // '\n  0x022a: 0x2014,\n  // —\n  0x022b: 0xa9,\n  // ©\n  0x022c: 0x2120,\n  // ℠\n  0x022d: 0x2022,\n  // •\n  0x022e: 0x201c,\n  // “\n  0x022f: 0x201d,\n  // ”\n  0x0230: 0xc0,\n  // À\n  0x0231: 0xc2,\n  // Â\n  0x0232: 0xc7,\n  // Ç\n  0x0233: 0xc8,\n  // È\n  0x0234: 0xca,\n  // Ê\n  0x0235: 0xcb,\n  // Ë\n  0x0236: 0xeb,\n  // ë\n  0x0237: 0xce,\n  // Î\n  0x0238: 0xcf,\n  // Ï\n  0x0239: 0xef,\n  // ï\n  0x023a: 0xd4,\n  // Ô\n  0x023b: 0xd9,\n  // Ù\n  0x023c: 0xf9,\n  // ù\n  0x023d: 0xdb,\n  // Û\n  0x023e: 0xab,\n  // «\n  0x023f: 0xbb,\n  // »\n  0x0320: 0xc3,\n  // Ã\n  0x0321: 0xe3,\n  // ã\n  0x0322: 0xcd,\n  // Í\n  0x0323: 0xcc,\n  // Ì\n  0x0324: 0xec,\n  // ì\n  0x0325: 0xd2,\n  // Ò\n  0x0326: 0xf2,\n  // ò\n  0x0327: 0xd5,\n  // Õ\n  0x0328: 0xf5,\n  // õ\n  0x0329: 0x7b,\n  // {\n  0x032a: 0x7d,\n  // }\n  0x032b: 0x5c,\n  // \\\n  0x032c: 0x5e,\n  // ^\n  0x032d: 0x5f,\n  // _\n  0x032e: 0x7c,\n  // |\n  0x032f: 0x7e,\n  // ~\n  0x0330: 0xc4,\n  // Ä\n  0x0331: 0xe4,\n  // ä\n  0x0332: 0xd6,\n  // Ö\n  0x0333: 0xf6,\n  // ö\n  0x0334: 0xdf,\n  // ß\n  0x0335: 0xa5,\n  // ¥\n  0x0336: 0xa4,\n  // ¤\n  0x0337: 0x2502,\n  // │\n  0x0338: 0xc5,\n  // Å\n  0x0339: 0xe5,\n  // å\n  0x033a: 0xd8,\n  // Ø\n  0x033b: 0xf8,\n  // ø\n  0x033c: 0x250c,\n  // ┌\n  0x033d: 0x2510,\n  // ┐\n  0x033e: 0x2514,\n  // └\n  0x033f: 0x2518 // ┘\n\n};\n\nvar getCharFromCode = function getCharFromCode(code) {\n  if (code === null) {\n    return '';\n  }\n\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n}; // the index of the last row in a CEA-608 display buffer\n\n\nvar BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\n\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\n\nvar createDisplayBuffer = function createDisplayBuffer() {\n  var result = [],\n      i = BOTTOM_ROW + 1;\n\n  while (i--) {\n    result.push('');\n  }\n\n  return result;\n};\n\nvar Cea608Stream = function Cea608Stream(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n  this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n  this.setConstants();\n  this.reset();\n\n  this.push = function (packet) {\n    var data, swap, char0, char1, text; // remove the parity bits\n\n    data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    } // Store control codes\n\n\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n      this.flushDisplayed(packet.pts); // flip memory\n\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n      this.startPts_ = packet.pts;\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts; // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      } // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n\n\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      } // Detect offset control codes and adjust cursor\n\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      } // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n\n\n      if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      } // We have a normal character in char0, and possibly one in char1\n\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n    } // finish data processing\n\n  };\n};\n\nCea608Stream.prototype = new Stream(); // Trigger a cue point that captures the current state of the\n// display buffer\n\nCea608Stream.prototype.flushDisplayed = function (pts) {\n  var content = this.displayed_ // remove spaces from the start and end of the string\n  .map(function (row) {\n    try {\n      return row.trim();\n    } catch (e) {\n      // Ordinarily, this shouldn't happen. However, caption\n      // parsing errors should not throw exceptions and\n      // break playback.\n      // eslint-disable-next-line no-console\n      console.error('Skipping malformed caption.');\n      return '';\n    }\n  }) // combine all text rows to display in one cue\n  .join('\\n') // and remove blank rows from the start and end, but not the middle\n  .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n/**\n * Zero out the data, used for startup and on seek\n */\n\n\nCea608Stream.prototype.reset = function () {\n  this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n  this.formatting_ = [];\n};\n/**\n * Sets up control code and related constants for this instance\n */\n\n\nCea608Stream.prototype.setConstants = function () {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_ = 0x10;\n    this.EXT_ = 0x11;\n    this.CONTROL_ = (0x14 | this.field_) << 8;\n    this.OFFSET_ = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_ = 0x18;\n    this.EXT_ = 0x19;\n    this.CONTROL_ = (0x1c | this.field_) << 8;\n    this.OFFSET_ = 0x1f;\n  } // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n\n\n  this.PADDING_ = 0x0000; // Pop-on Mode\n\n  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n  this.BACKSPACE_ = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\n\n\nCea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\n\n\nCea608Stream.prototype.isExtCharacter = function (char0, char1) {\n  return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\n\n\nCea608Stream.prototype.isMidRowCode = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n};\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\n\n\nCea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n  return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n};\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\n\n\nCea608Stream.prototype.isPAC = function (char0, char1) {\n  return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n};\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\n\n\nCea608Stream.prototype.isColorPAC = function (char1) {\n  return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n};\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\n\n\nCea608Stream.prototype.isNormalChar = function (_char) {\n  return _char >= 0x20 && _char <= 0x7f;\n};\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\n\n\nCea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n}; // Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\n\n\nCea608Stream.prototype.addFormatting = function (pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function (text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n}; // Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\n\n\nCea608Stream.prototype.clearFormatting = function (pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n\n  var text = this.formatting_.reverse().reduce(function (text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n}; // Mode Implementations\n\n\nCea608Stream.prototype.popOn = function (pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function () {\n  var i; // clear out inactive rows\n\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  } // shift displayed rows up\n\n\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  } // clear out the bottom row\n\n\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n}; // exports\n\n\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\n\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\n\nvar parseSei = function parseSei(bytes) {\n  var i = 0,\n      result = {\n    payloadType: -1,\n    payloadSize: 0\n  },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    } // Parse payload type\n\n\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n\n    payloadType += bytes[i++]; // Parse payload size\n\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n\n    payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    } // skip the payload and parse the next message\n\n\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n}; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\nvar parseUserData = function parseUserData(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n  if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n    return null;\n  } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n  if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n    return null;\n  } // finally, user_data_type_code should be 0x03 for caption data\n\n\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  } // return the user_data_type_structure and strip the trailing\n  // marker bits\n\n\n  return sei.payload.subarray(8, sei.payload.length - 1);\n}; // see CEA-708-D, section 4.4\n\n\nvar parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n  var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n  if (!(userData[0] & 0x40)) {\n    return results;\n  } // parse out the cc_data_1 and cc_data_2 fields\n\n\n  count = userData[0] & 0x1f;\n\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    }; // capture cc data when cc_valid is 1\n\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n      results.push(data);\n    }\n  }\n\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n  var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      emulationPreventionBytesPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (emulationPreventionBytesPositions.length === 0) {\n    return data;\n  } // Create a new array to hold the NAL unit data\n\n\n  newLength = length - emulationPreventionBytesPositions.length;\n  newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === emulationPreventionBytesPositions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      emulationPreventionBytesPositions.shift();\n    }\n\n    newData[i] = data[sourceIndex];\n  }\n\n  return newData;\n}; // exports\n\n\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function handleRollover(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n\n\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function TimestampRolloverStream(type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","module.exports = SafeParseTuple;\n\nfunction SafeParseTuple(obj, reviver) {\n  var json;\n  var error = null;\n\n  try {\n    json = JSON.parse(obj, reviver);\n  } catch (err) {\n    error = err;\n  }\n\n  return [error, json];\n}","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\n\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar PES_TIMESCALE = 90000,\n    MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\n\nvar parsePsi_ = function parsePsi_(bytes, pmt) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n\n          break;\n\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n\n          break;\n\n        default:\n          break;\n      } // Found the pat and pmt, we can stop walking the segment\n\n\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\n\n\nvar parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n  var endLoop = false; // Start walking from start of segment to get first audio packet\n\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last audio packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\n\n\nvar parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n  var endLoop = false;\n  var currentFrame = {\n    data: [],\n    size: 0\n  }; // Start walking from start of segment to get first video packet\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n\n                  currentFrame.size = 0;\n                }\n              }\n\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last video packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\n\n\nvar adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n\n    segmentInfo.audio.forEach(function (info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n\n    segmentInfo.video.forEach(function (info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n/**\n * inspects the aac data stream for start and end time information\n */\n\n\nvar inspectAac_ = function inspectAac_(bytes) {\n  var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n\n        byteIndex += frameSize;\n        break;\n\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n\n      default:\n        byteIndex++;\n        break;\n    }\n\n    if (endLoop) {\n      return null;\n    }\n  }\n\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n  var result = {\n    audio: [{\n      type: 'audio',\n      dts: timestamp,\n      pts: timestamp\n    }, {\n      type: 'audio',\n      dts: timestamp + audioCount * 1024 * audioTimescale,\n      pts: timestamp + audioCount * 1024 * audioTimescale\n    }]\n  };\n  return result;\n};\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\n\n\nvar inspectTs_ = function inspectTs_(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n  var result = {};\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n\n          break;\n\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\n\n\nvar inspect = function inspect(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || !result.audio && !result.video) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, matchPath } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    try {\n      if (this.props.onClick) this.props.onClick(event);\n    } catch (ex) {\n      event.preventDefault();\n      throw ex;\n    }\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(__RouterContext.Consumer, null, function (context) {\n    !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <NavLink> outside a <Router>\") : invariant(false) : void 0;\n    var pathToMatch = locationProp ? locationProp.pathname : context.location.pathname;\n    var match = escapedPath ? matchPath(pathToMatch, {\n      path: escapedPath,\n      exact: exact,\n      strict: strict\n    }) : null;\n    var isActive = !!(isActiveProp ? isActiveProp(match, context.location) : match);\n    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n    var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n    return React.createElement(Link, _extends({\n      \"aria-current\": isActive && ariaCurrent || null,\n      className: className,\n      style: style,\n      to: to\n    }, rest));\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };","// @flow\n'use strict';\n\nvar key = '__global_unique_id__';\n\nmodule.exports = function () {\n  return global[key] = (global[key] || 0) + 1;\n};","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar ReactIs = require('react-is');\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (ReactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","module.exports = isFunction;\nvar toString = Object.prototype.toString;\n\nfunction isFunction(fn) {\n  var string = toString.call(fn);\n  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n  fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n}\n\n;","var trim = require('string.prototype.trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\n\nvar getPolyfill = require('./polyfill');\n\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\ndefine(boundTrim, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = boundTrim;","'use strict';\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slice.call(arguments, 1);\n  var bound;\n\n  var binder = function binder() {\n    if (this instanceof bound) {\n      var result = target.apply(this, args.concat(slice.call(arguments)));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    } else {\n      return target.apply(that, args.concat(slice.call(arguments)));\n    }\n  };\n\n  var boundLength = Math.max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs.push('$' + i);\n  }\n\n  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};","'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) {\n  return origKeys(o);\n} : require('./implementation');\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n  if (Object.keys) {\n    var keysWorksWithArguments = function () {\n      // Safari 5.0 bug\n      var args = Object.keys(arguments);\n      return args && args.length === arguments.length;\n    }(1, 2);\n\n    if (!keysWorksWithArguments) {\n      Object.keys = function keys(object) {\n        // eslint-disable-line func-name-matching\n        if (isArgs(object)) {\n          return originalKeys(slice.call(object));\n        }\n\n        return originalKeys(object);\n      };\n    }\n  } else {\n    Object.keys = keysShim;\n  }\n\n  return Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;","'use strict';\n\nvar keysShim;\n\nif (!Object.keys) {\n  // modified from https://github.com/es-shims/es5-shim\n  var has = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n\n  var isArgs = require('./isArguments'); // eslint-disable-line global-require\n\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var hasDontEnumBug = !isEnumerable.call({\n    toString: null\n  }, 'toString');\n  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  var equalsConstructorPrototype = function equalsConstructorPrototype(o) {\n    var ctor = o.constructor;\n    return ctor && ctor.prototype === o;\n  };\n\n  var excludedKeys = {\n    $applicationCache: true,\n    $console: true,\n    $external: true,\n    $frame: true,\n    $frameElement: true,\n    $frames: true,\n    $innerHeight: true,\n    $innerWidth: true,\n    $onmozfullscreenchange: true,\n    $onmozfullscreenerror: true,\n    $outerHeight: true,\n    $outerWidth: true,\n    $pageXOffset: true,\n    $pageYOffset: true,\n    $parent: true,\n    $scrollLeft: true,\n    $scrollTop: true,\n    $scrollX: true,\n    $scrollY: true,\n    $self: true,\n    $webkitIndexedDB: true,\n    $webkitStorageInfo: true,\n    $window: true\n  };\n\n  var hasAutomationEqualityBug = function () {\n    /* global window */\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    for (var k in window) {\n      try {\n        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n          try {\n            equalsConstructorPrototype(window[k]);\n          } catch (e) {\n            return true;\n          }\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {\n    /* global window */\n    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n      return equalsConstructorPrototype(o);\n    }\n\n    try {\n      return equalsConstructorPrototype(o);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object';\n    var isFunction = toStr.call(object) === '[object Function]';\n    var isArguments = isArgs(object);\n    var isString = isObject && toStr.call(object) === '[object String]';\n    var theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError('Object.keys called on a non-object');\n    }\n\n    var skipProto = hasProtoEnumBug && isFunction;\n\n    if (isString && object.length > 0 && !has.call(object, 0)) {\n      for (var i = 0; i < object.length; ++i) {\n        theKeys.push(String(i));\n      }\n    }\n\n    if (isArguments && object.length > 0) {\n      for (var j = 0; j < object.length; ++j) {\n        theKeys.push(String(j));\n      }\n    } else {\n      for (var name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(String(name));\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n      for (var k = 0; k < dontEnums.length; ++k) {\n        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n          theKeys.push(dontEnums[k]);\n        }\n      }\n    }\n\n    return theKeys;\n  };\n}\n\nmodule.exports = keysShim;","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\n\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has'); // https://es5.github.io/#x9\n\n\nvar ES5 = {\n  ToPrimitive: toPrimitive,\n  ToBoolean: function ToBoolean(value) {\n    return !!value;\n  },\n  ToNumber: function ToNumber(value) {\n    return +value; // eslint-disable-line no-implicit-coercion\n  },\n  ToInteger: function ToInteger(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number)) {\n      return 0;\n    }\n\n    if (number === 0 || !$isFinite(number)) {\n      return number;\n    }\n\n    return sign(number) * Math.floor(Math.abs(number));\n  },\n  ToInt32: function ToInt32(x) {\n    return this.ToNumber(x) >> 0;\n  },\n  ToUint32: function ToUint32(x) {\n    return this.ToNumber(x) >>> 0;\n  },\n  ToUint16: function ToUint16(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * Math.floor(Math.abs(number));\n    return mod(posInt, 0x10000);\n  },\n  ToString: function ToString(value) {\n    return $String(value);\n  },\n  ToObject: function ToObject(value) {\n    this.CheckObjectCoercible(value);\n    return $Object(value);\n  },\n  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n    /* jshint eqnull:true */\n    if (value == null) {\n      throw new $TypeError(optMessage || 'Cannot call method on ' + value);\n    }\n\n    return value;\n  },\n  IsCallable: IsCallable,\n  SameValue: function SameValue(x, y) {\n    if (x === y) {\n      // 0 === -0, but they are not identical.\n      if (x === 0) {\n        return 1 / x === 1 / y;\n      }\n\n      return true;\n    }\n\n    return $isNaN(x) && $isNaN(y);\n  },\n  // https://www.ecma-international.org/ecma-262/5.1/#sec-8\n  Type: function Type(x) {\n    if (x === null) {\n      return 'Null';\n    }\n\n    if (typeof x === 'undefined') {\n      return 'Undefined';\n    }\n\n    if (typeof x === 'function' || typeof x === 'object') {\n      return 'Object';\n    }\n\n    if (typeof x === 'number') {\n      return 'Number';\n    }\n\n    if (typeof x === 'boolean') {\n      return 'Boolean';\n    }\n\n    if (typeof x === 'string') {\n      return 'String';\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n    if (this.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n  IsDataDescriptor: function IsDataDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n  IsGenericDescriptor: function IsGenericDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n      return true;\n    }\n\n    return false;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsDataDescriptor(Desc)) {\n      return {\n        value: Desc['[[Value]]'],\n        writable: !!Desc['[[Writable]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else if (this.IsAccessorDescriptor(Desc)) {\n      return {\n        get: Desc['[[Get]]'],\n        set: Desc['[[Set]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else {\n      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n    }\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n    if (this.Type(Obj) !== 'Object') {\n      throw new $TypeError('ToPropertyDescriptor requires an object');\n    }\n\n    var desc = {};\n\n    if (has(Obj, 'enumerable')) {\n      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n    }\n\n    if (has(Obj, 'configurable')) {\n      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n    }\n\n    if (has(Obj, 'value')) {\n      desc['[[Value]]'] = Obj.value;\n    }\n\n    if (has(Obj, 'writable')) {\n      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n    }\n\n    if (has(Obj, 'get')) {\n      var getter = Obj.get;\n\n      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n        throw new TypeError('getter must be a function');\n      }\n\n      desc['[[Get]]'] = getter;\n    }\n\n    if (has(Obj, 'set')) {\n      var setter = Obj.set;\n\n      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n        throw new $TypeError('setter must be a function');\n      }\n\n      desc['[[Set]]'] = setter;\n    }\n\n    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n    }\n\n    return desc;\n  }\n};\nmodule.exports = ES5;","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n\n  console.log(predicate(ES, value), value);\n};","module.exports = Number.isNaN || function isNaN(a) {\n  return a !== a;\n};","var $isNaN = Number.isNaN || function (a) {\n  return a !== a;\n};\n\nmodule.exports = Number.isFinite || function (x) {\n  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;\n};","module.exports = function sign(number) {\n  return number >= 0 ? 1 : -1;\n};","module.exports = function mod(number, modulo) {\n  var remain = number % modulo;\n  return Math.floor(remain >= 0 ? remain : remain + modulo);\n};","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable'); // http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\n\n\nvar ES5internalSlots = {\n  '[[DefaultValue]]': function DefaultValue(O) {\n    var actualHint;\n\n    if (arguments.length > 1) {\n      actualHint = arguments[1];\n    } else {\n      actualHint = toStr.call(O) === '[object Date]' ? String : Number;\n    }\n\n    if (actualHint === String || actualHint === Number) {\n      var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n      var value, i;\n\n      for (i = 0; i < methods.length; ++i) {\n        if (isCallable(O[methods[i]])) {\n          value = O[methods[i]]();\n\n          if (isPrimitive(value)) {\n            return value;\n          }\n        }\n      }\n\n      throw new TypeError('No default value');\n    }\n\n    throw new TypeError('invalid [[DefaultValue]] hint supplied');\n  }\n}; // http://ecma-international.org/ecma-262/5.1/#sec-9.1\n\nmodule.exports = function ToPrimitive(input) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  if (arguments.length > 1) {\n    return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n  }\n\n  return ES5internalSlots['[[DefaultValue]]'](input);\n};","module.exports = function isPrimitive(value) {\n  return value === null || typeof value !== 'function' && typeof value !== 'object';\n};","'use strict';\n\nvar define = require('define-properties');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n  var polyfill = getPolyfill();\n  define(String.prototype, {\n    trim: polyfill\n  }, {\n    trim: function trim() {\n      return String.prototype.trim !== polyfill;\n    }\n  });\n  return polyfill;\n};","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var receiver;\n\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\n\nmodule.exports = forEach;","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || function () {\n  function F() {}\n\n  return function (o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n\n    F.prototype = o;\n    return new F();\n  };\n}(); // Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\n\n\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\n\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n}; // Try to parse input as a time stamp.\n\nfunction parseTimeStamp(input) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0, m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n} // A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\n\n\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function set(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function get(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function has(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function alt(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function integer(k, v) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function percent(k, v) {\n    var m;\n\n    if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n      v = parseFloat(v);\n\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n\n    return false;\n  }\n}; // Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\n\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n\n    var kv = groups[i].split(keyValueDelim);\n\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input; // 4.1 WebVTT timestamp\n\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n    } // Remove time stamp from input.\n\n\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  } // 4.4.2 WebVTT cue settings\n\n\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n    parseOptions(input, function (k, v) {\n      switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n\n          break;\n\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"size\":\n          settings.percent(k, v);\n          break;\n\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n      }\n    }, /:/, /\\s/); // Apply default values for any missing fields.\n\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  } // 4.1 WebVTT cue timings.\n\n\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n  skipWhitespace();\n\n  if (input.substr(0, 3) !== \"-->\") {\n    // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n  }\n\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n  // 4.1 WebVTT cue settings list.\n\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\",\n  \"&nbsp;\": \"\\xA0\"\n};\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n}; // Parse content into a document fragment.\n\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    } // Consume 'n' characters from the input.\n\n\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n\n    return consume(m[1] ? m[1] : m[2]);\n  } // Unescape a string 's'.\n\n\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n\n  function unescape(s) {\n    while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n      s = s.replace(m[0], unescape1);\n    }\n\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n  } // Create an element for this tag.\n\n\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n\n    if (!tagName) {\n      return null;\n    }\n\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        } // Otherwise just ignore the end tag.\n\n\n        continue;\n      }\n\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n      if (!m) {\n        continue;\n      } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n      node = createElement(m[1], m[3]);\n\n      if (!node) {\n        continue;\n      } // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n\n\n      if (!shouldAdd(current, node)) {\n        continue;\n      } // Set the class list (as a list of classes, separated by space).\n\n\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      } // Append the node to the current node, and enter the scope of the new\n      // node.\n\n\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    } // Text nodes are leaf nodes.\n\n\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n} // This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n\n      return text;\n    }\n\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n\n  while (text = nextTextNode(nodeStack)) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n    return cue.line;\n  }\n\n  if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n\n  return ++count * -1;\n}\n\nfunction StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\n\n\nStyleBox.prototype.applyStyles = function (styles, div) {\n  div = div || this.div;\n\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function (val, unit) {\n  return val === 0 ? 0 : val + unit;\n}; // Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\n\n\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n  this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n\n  var textPos = 0;\n\n  switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n\n    case \"middle\":\n      textPos = cue.position - cue.size / 2;\n      break;\n\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n  } // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n\n\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left: this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    }); // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function (box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\n\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\n\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n\n    lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n  }\n\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || top + (obj.height || height);\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n} // Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\n\n\nBoxPosition.prototype.move = function (axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n  switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n  }\n}; // Check if this box overlaps another box, b2.\n\n\nBoxPosition.prototype.overlaps = function (b2) {\n  return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n}; // Check if this box overlaps any other boxes in boxes.\n\n\nBoxPosition.prototype.overlapsAny = function (boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // Check if this box is within another box.\n\n\nBoxPosition.prototype.within = function (container) {\n  return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n}; // Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\n\n\nBoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n  switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n\n    case \"-x\":\n      return this.right > container.right;\n\n    case \"+y\":\n      return this.top < container.top;\n\n    case \"-y\":\n      return this.bottom > container.bottom;\n  }\n}; // Find the percentage of the area that this box is overlapping with another\n// box.\n\n\nBoxPosition.prototype.intersectPercentage = function (b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n}; // Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\n\n\nBoxPosition.prototype.toCSSCompatValues = function (reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n}; // Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\nBoxPosition.getSimpleBoxPosition = function (obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n  obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || top + (obj.height || height),\n    width: obj.width || width\n  };\n  return ret;\n}; // Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\n\n\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n        b.move(axis[i]);\n      } // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n\n\n      if (b.within(containerBox)) {\n        return b;\n      }\n\n      var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      } // Reset the box position to the specified position.\n\n\n      b = new BoxPosition(specifiedPosition);\n    }\n\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = []; // If we have a line number to align the cue to.\n\n  if (cue.snapToLines) {\n    var size;\n\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    } // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n\n\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    } // Move the box to the specified position. This may not be its best\n    // position.\n\n\n    boxPosition.move(initialAxis, position);\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n    switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= calculatedPercentage / 2;\n        break;\n\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n    } // Apply initial line position to the cue box.\n\n\n    switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n    }\n\n    axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n    // to it.\n\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {} // Nothing\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\nWebVTT.StringDecoder = function () {\n  return {\n    decode: function decode(data) {\n      if (!data) {\n        return \"\";\n      }\n\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function (window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\n\nWebVTT.processCues = function (window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  } // Remove all previous children.\n\n\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n\n    return false;\n  } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function () {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n\n      cue.displayState = styleBox.div;\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function (window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function reportOrThrowError(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function parse(data) {\n    var self = this; // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {\n        stream: true\n      });\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n\n      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      self.buffer = buffer.substr(pos);\n      return line;\n    } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n    function parseRegion(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n\n          case \"width\":\n            settings.percent(k, v);\n            break;\n\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n\n            if (xy.length !== 2) {\n              break;\n            } // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n\n\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n        }\n      }, /=/, /\\s/); // Create the region, using default values for any values that were not\n      // specified.\n\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n        self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    } // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n\n\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"MPEGT\":\n            settings.integer(k + 'S', v);\n            break;\n\n          case \"LOCA\":\n            settings.set(k + 'L', parseTimeStamp(v));\n            break;\n        }\n      }, /[^\\d]:/, /,/);\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    } // 3.2 WebVTT metadata header syntax\n\n\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"X-TIMESTAMP-MAP\":\n              parseTimestampMap(v);\n              break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"Region\":\n              // 3.3 WebVTT region metadata header syntax\n              parseRegion(v);\n              break;\n          }\n        }, /:/);\n      }\n    } // 5.1 WebVTT file parsing.\n\n\n    try {\n      var line;\n\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n            if (!line) {\n              continue;\n            }\n\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n\n          // Process line as start of a cue.\n\n          /*falls through*/\n\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n\n            self.state = \"CUETEXT\";\n            continue;\n\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n\n            self.cue.text += line;\n            continue;\n\n          case \"BADCUE\":\n            // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n\n      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n\n    return this;\n  },\n  flush: function flush() {\n    var self = this;\n\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      } // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n\n\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n    }\n\n    self.onflush && self.onflush();\n    return this;\n  }\n};\nmodule.exports = WebVTT;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function get() {\n        return _id;\n      },\n      set: function set(value) {\n        _id = \"\" + value;\n      }\n    },\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function get() {\n        return _pauseOnExit;\n      },\n      set: function set(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n    \"startTime\": {\n      enumerable: true,\n      get: function get() {\n        return _startTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"endTime\": {\n      enumerable: true,\n      get: function get() {\n        return _endTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"text\": {\n      enumerable: true,\n      get: function get() {\n        return _text;\n      },\n      set: function set(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"region\": {\n      enumerable: true,\n      get: function get() {\n        return _region;\n      },\n      set: function set(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"vertical\": {\n      enumerable: true,\n      get: function get() {\n        return _vertical;\n      },\n      set: function set(value) {\n        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"snapToLines\": {\n      enumerable: true,\n      get: function get() {\n        return _snapToLines;\n      },\n      set: function set(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"line\": {\n      enumerable: true,\n      get: function get() {\n        return _line;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"lineAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _lineAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"position\": {\n      enumerable: true,\n      get: function get() {\n        return _position;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"positionAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _positionAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"size\": {\n      enumerable: true,\n      get: function get() {\n        return _size;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"align\": {\n      enumerable: true,\n      get: function get() {\n        return _align;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n  /**\n   * Other <track> spec defined properties\n   */\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n  this.displayState = undefined;\n}\n/**\n * VTTCue methods\n */\n\n\nVTTCue.prototype.getCueAsHTML = function () {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && value >= 0 && value <= 100;\n} // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function get() {\n        return _width;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function get() {\n        return _lines;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function get() {\n        return _scroll;\n      },\n      set: function set(value) {\n        var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;","var toUnsigned = function toUnsigned(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n  var i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  } // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n\n\n  if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  } // Push the final frame\n\n\n  frames.push(currentFrame);\n  return frames;\n}; // Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\n\n\nvar groupFramesIntoGops = function groupFramesIntoGops(frames) {\n  var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration; // push the final Gop\n\n  gops.push(currentGop);\n  return gops;\n};\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\n\n\nvar extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\n\n\nvar createDefaultSample = function createDefaultSample() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\n\n\nvar sampleForFrame = function sampleForFrame(frame, dataOffset) {\n  var sample = createDefaultSample();\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n}; // generate the track's sample table from an array of gops\n\n\nvar generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n  var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n      sample = sampleForFrame(currentFrame, dataOffset);\n      dataOffset += sample.size;\n      samples.push(sample);\n    }\n  }\n\n  return samples;\n}; // generate the track's raw mdat data from an array of gops\n\n\nvar concatenateNalData = function concatenateNalData(gops) {\n  var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h]; // For each Frame..\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i]; // For each NAL..\n\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};","var coneOfSilence = require('../data/silence');\n\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\n\nvar sumFrameByteLengths = function sumFrameByteLengths(array) {\n  var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n}; // Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\n\n\nvar prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n  var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  } // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n\n\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n}; // If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\n\n\nvar trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  } // We will need to recalculate the earliest segment Dts\n\n\n  track.minSegmentDts = Infinity;\n  return adtsFrames.filter(function (currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    } // Otherwise, discard it\n\n\n    return false;\n  });\n}; // generate the track's raw mdat data from an array of frames\n\n\nvar generateSampleTable = function generateSampleTable(frames) {\n  var i,\n      currentFrame,\n      samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n    });\n  }\n\n  return samples;\n}; // generate the track's sample table from an array of frames\n\n\nvar concatenateFrameData = function concatenateFrameData(frames) {\n  var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\nvar zeroFill = function zeroFill(count) {\n  var a = [];\n\n  while (count--) {\n    a.push(0);\n  }\n\n  return a;\n};\n\nvar makeTable = function makeTable(metaTable) {\n  return Object.keys(metaTable).reduce(function (obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n}; // Frames-of-silence to use for filling in missing AAC frames\n\n\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\nmodule.exports = makeTable(coneOfSilence);","var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\nsecondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs;\n\nsecondsToVideoTs = function secondsToVideoTs(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function videoTsToSeconds(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\n\nvar collectDtsInfo = function collectDtsInfo(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\n\n\nvar clearDtsInfo = function clearDtsInfo(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\nvar calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n  var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n\n\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n  baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js'),\n    CaptionStream = require('./caption-stream'),\n    StreamTypes = require('./stream-types'),\n    TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js'); // object types\n\n\nvar _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\nvar MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\n\n_TransportPacketStream = function TransportPacketStream() {\n  var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n      bytesInBuffer = 0;\n\n  _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n\n\n  this.push = function (bytes) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    } // While we have enough data for a packet\n\n\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n\n\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n\n\n  this.flush = function () {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n\n    this.trigger('done');\n  };\n};\n\n_TransportPacketStream.prototype = new Stream();\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\n\n_TransportParseStream = function TransportParseStream() {\n  var parsePsi, parsePat, parsePmt, self;\n\n  _TransportParseStream.prototype.init.call(this);\n\n  self = this;\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function parsePsi(payload, psi) {\n    var offset = 0; // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function parsePat(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n    // skip the PSI header and parse the first PMT entry\n\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n\n\n  parsePmt = function parsePmt(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(payload[5] & 0x01)) {\n      return;\n    } // overwrite any existing program map table\n\n\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    }; // the mapping table ends at the end of the current section\n\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n    offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n\n      if (streamType === StreamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      } // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    } // record the map on the packet as well\n\n\n    pmt.programMapTable = self.programMapTable;\n  };\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n\n\n  this.push = function (packet) {\n    var result = {},\n        offset = 4;\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[offset] + 1;\n    } // parse the rest of the packet based on the type\n\n\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function (packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n    this.trigger('data', result);\n  };\n};\n\n_TransportParseStream.prototype = new Stream();\n_TransportParseStream.STREAM_TYPES = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\n\n_ElementaryStream = function ElementaryStream() {\n  var self = this,\n      // PES packet fragments\n  video = {\n    data: [],\n    size: 0\n  },\n      audio = {\n    data: [],\n    size: 0\n  },\n      timedMetadata = {\n    data: [],\n    size: 0\n  },\n      parsePes = function parsePes(payload, pes) {\n    var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n    pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n    pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n      pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    } // the data section starts immediately after the PES header.\n    // pes_header_data_length specifies the number of header bytes\n    // that follow the last byte of the field.\n\n\n    pes.data = payload.subarray(9 + payload[8]);\n  },\n\n  /**\n    * Pass completely parsed PES packets to the next stream in the pipeline\n   **/\n  flushStream = function flushStream(stream, type, forceFlush) {\n    var packetData = new Uint8Array(stream.size),\n        event = {\n      type: type\n    },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment; // do nothing if there is not enough buffered data for a complete\n    // PES header\n\n    if (!stream.data.length || stream.size < 9) {\n      return;\n    }\n\n    event.trackId = stream.data[0].pid; // reassemble the packet\n\n    for (i = 0; i < stream.data.length; i++) {\n      fragment = stream.data[i];\n      packetData.set(fragment.data, offset);\n      offset += fragment.data.byteLength;\n    } // parse assembled packet's PES header\n\n\n    parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n    // check that there is enough stream data to fill the packet\n\n    packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n    if (forceFlush || packetFlushable) {\n      stream.size = 0;\n      stream.data.length = 0;\n    } // only emit packets that are complete. this is to avoid assembling\n    // incomplete PES packets due to poor segmentation\n\n\n    if (packetFlushable) {\n      self.trigger('data', event);\n    }\n  };\n\n  _ElementaryStream.prototype.init.call(this);\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n\n\n  this.push = function (data) {\n    ({\n      pat: function pat() {// we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function pes() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n          case StreamTypes.H264_STREAM_TYPE:\n          case m2tsStreamTypes.H264_STREAM_TYPE:\n            stream = video;\n            streamType = 'video';\n            break;\n\n          case StreamTypes.ADTS_STREAM_TYPE:\n            stream = audio;\n            streamType = 'audio';\n            break;\n\n          case StreamTypes.METADATA_STREAM_TYPE:\n            stream = timedMetadata;\n            streamType = 'timed-metadata';\n            break;\n\n          default:\n            // ignore unknown stream types\n            return;\n        } // if a new packet is starting, we can flush the completed\n        // packet\n\n\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        } // buffer this fragment until we are sure we've received the\n        // complete payload\n\n\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function pmt() {\n        var event = {\n          type: 'metadata',\n          tracks: []\n        },\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n\n\n  this.flush = function () {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\n\n_ElementaryStream.prototype = new Stream();\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: _TransportPacketStream,\n  TransportParseStream: _TransportParseStream,\n  ElementaryStream: _ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\n\nvar Stream = require('../utils/stream'),\n    StreamTypes = require('./stream-types'),\n    // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n},\n    // return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8 = function parseUtf8(bytes, start, end) {\n  return decodeURIComponent(percentEncode(bytes, start, end));\n},\n    // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n},\n    parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n},\n    tagParsers = {\n  TXXX: function TXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the text fields\n        tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n        tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n        break;\n      }\n    }\n\n    tag.data = tag.value;\n  },\n  WXXX: function WXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.description = parseUtf8(tag.data, 1, i);\n        tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n        break;\n      }\n    }\n  },\n  PRIV: function PRIV(tag) {\n    var i;\n\n    for (i = 0; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.owner = parseIso88591(tag.data, 0, i);\n        break;\n      }\n    }\n\n    tag.privateData = tag.data.subarray(i + 1);\n    tag.data = tag.privateData;\n  }\n},\n    _MetadataStream;\n\n_MetadataStream = function MetadataStream(options) {\n  var settings = {\n    debug: !!(options && options.debug),\n    // the bytes of the program-level descriptor field in MP2T\n    // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n    // program element descriptors\"\n    descriptor: options && options.descriptor\n  },\n      // the total size in bytes of the ID3 tag being parsed\n  tagSize = 0,\n      // tag data that is not complete enough to be parsed\n  buffer = [],\n      // the total number of bytes currently in the buffer\n  bufferSize = 0,\n      i;\n\n  _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function (chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    } // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n\n\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    } // ignore events that don't look like ID3 data\n\n\n    if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n\n      return;\n    } // add this chunk to the data we've collected so far\n\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10;\n    } // if the entire frame has not arrived, wait for more data\n\n\n    if (bufferSize < tagSize) {\n      return;\n    } // collect the entire frame so it can be parsed\n\n\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    } // find the start of the first frame and the end of the tag\n\n\n    frameStart = 10;\n\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n\n      frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n\n          this.trigger('timestamp', frame);\n        }\n      }\n\n      tag.frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n\n    this.trigger('data', tag);\n  };\n};\n\n_MetadataStream.prototype = new Stream();\nmodule.exports = _MetadataStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar _AdtsStream;\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\n\n_AdtsStream = function AdtsStream() {\n  var buffer;\n\n  _AdtsStream.prototype.init.call(this);\n\n  this.push = function (packet) {\n    var i = 0,\n        frameNum = 0,\n        frameLength,\n        protectionSkipBytes,\n        frameEnd,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    } // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n\n\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    } // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n    while (i + 5 < buffer.length) {\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n\n\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n\n      frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n      frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n\n      if (buffer.byteLength < frameEnd) {\n        return;\n      } // Otherwise, deliver the complete AAC frame\n\n\n      this.trigger('data', {\n        pts: packet.pts + frameNum * adtsFrameDuration,\n        dts: packet.dts + frameNum * adtsFrameDuration,\n        sampleCount: sampleCount,\n        audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n        channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      }); // If the buffer is empty, clear it and return\n\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++; // Remove the finished frame from the buffer and start the process again\n\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n\n  this.flush = function () {\n    this.trigger('done');\n  };\n};\n\n_AdtsStream.prototype = new Stream();\nmodule.exports = _AdtsStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar _H264Stream, _NalByteStream;\n\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\n\n_NalByteStream = function NalByteStream() {\n  var syncPoint = 0,\n      i,\n      buffer;\n\n  _NalByteStream.prototype.init.call(this);\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n\n\n  this.push = function (data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    } // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n    // advance the sync point to a NAL start, if necessary\n\n\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n        case 0:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0) {\n            i += 2;\n            break;\n          } else if (buffer[i - 2] !== 0) {\n            i++;\n            break;\n          } // deliver the NAL unit if it isn't empty\n\n\n          if (syncPoint + 3 !== i - 2) {\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          } // drop trailing zeroes\n\n\n          do {\n            i++;\n          } while (buffer[i] !== 1 && i < buffer.length);\n\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n            i += 3;\n            break;\n          } // deliver the NAL unit\n\n\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          i += 3;\n          break;\n      }\n    } // filter out the NAL units that were delivered\n\n\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function () {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    } // reset the stream state\n\n\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\n\n_NalByteStream.prototype = new Stream(); // values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\n\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\n\n_H264Stream = function H264Stream() {\n  var nalByteStream = new _NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n\n  _H264Stream.prototype.init.call(this);\n\n  self = this;\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n\n  this.push = function (packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n    nalByteStream.push(packet);\n  };\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n\n\n  nalByteStream.on('data', function (data) {\n    var event = {\n      trackId: trackId,\n      pts: currentPts,\n      dts: currentDts,\n      data: data\n    };\n\n    switch (data[0] & 0x1f) {\n      case 0x05:\n        event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n        break;\n\n      case 0x06:\n        event.nalUnitType = 'sei_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        break;\n\n      case 0x07:\n        event.nalUnitType = 'seq_parameter_set_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        event.config = readSequenceParameterSet(event.escapedRBSP);\n        break;\n\n      case 0x08:\n        event.nalUnitType = 'pic_parameter_set_rbsp';\n        break;\n\n      case 0x09:\n        event.nalUnitType = 'access_unit_delimiter_rbsp';\n        break;\n\n      default:\n        break;\n    } // This triggers data on the H264Stream\n\n\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function () {\n    self.trigger('done');\n  });\n\n  this.flush = function () {\n    nalByteStream.flush();\n  };\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n\n\n  skipScalingList = function skipScalingList(count, expGolombDecoder) {\n    var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  };\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n\n  discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n\n\n  readSequenceParameterSet = function readSequenceParameterSet(data) {\n    var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        sarScale = 1,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio,\n        aspectRatioIdc,\n        i;\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n    if (expGolombDecoder.readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n        switch (aspectRatioIdc) {\n          case 1:\n            sarRatio = [1, 1];\n            break;\n\n          case 2:\n            sarRatio = [12, 11];\n            break;\n\n          case 3:\n            sarRatio = [10, 11];\n            break;\n\n          case 4:\n            sarRatio = [16, 11];\n            break;\n\n          case 5:\n            sarRatio = [40, 33];\n            break;\n\n          case 6:\n            sarRatio = [24, 11];\n            break;\n\n          case 7:\n            sarRatio = [20, 11];\n            break;\n\n          case 8:\n            sarRatio = [32, 11];\n            break;\n\n          case 9:\n            sarRatio = [80, 33];\n            break;\n\n          case 10:\n            sarRatio = [18, 11];\n            break;\n\n          case 11:\n            sarRatio = [15, 11];\n            break;\n\n          case 12:\n            sarRatio = [64, 33];\n            break;\n\n          case 13:\n            sarRatio = [160, 99];\n            break;\n\n          case 14:\n            sarRatio = [4, 3];\n            break;\n\n          case 15:\n            sarRatio = [3, 2];\n            break;\n\n          case 16:\n            sarRatio = [2, 1];\n            break;\n\n          case 255:\n            {\n              sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n              break;\n            }\n        }\n\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n    };\n  };\n};\n\n_H264Stream.prototype = new Stream();\nmodule.exports = {\n  H264Stream: _H264Stream,\n  NalByteStream: _NalByteStream\n};","'use strict';\n\nvar ExpGolomb;\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\n\nExpGolomb = function ExpGolomb(workingData) {\n  var // the number of bytes left to examine in workingData\n  workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n  workingWord = 0,\n      // :uint\n  // the number of bits left to examine in the current word\n  workingBitsAvailable = 0; // :uint;\n  // ():uint\n\n  this.length = function () {\n    return 8 * workingBytesAvailable;\n  }; // ():uint\n\n\n  this.bitsAvailable = function () {\n    return 8 * workingBytesAvailable + workingBitsAvailable;\n  }; // ():void\n\n\n  this.loadWord = function () {\n    var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position, position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  }; // (count:int):void\n\n\n  this.skipBits = function (count) {\n    var skipBytes; // :int\n\n    if (workingBitsAvailable > count) {\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n      count -= skipBytes * 8;\n      workingBytesAvailable -= skipBytes;\n      this.loadWord();\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  }; // (size:int):uint\n\n\n  this.readBits = function (size) {\n    var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n    valu = workingWord >>> 32 - bits; // :uint\n    // if size > 31, handle error\n\n    workingBitsAvailable -= bits;\n\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n\n    return valu;\n  }; // ():uint\n\n\n  this.skipLeadingZeros = function () {\n    var leadingZeroCount; // :uint\n\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    } // we exhausted workingWord and still have not found a 1\n\n\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  }; // ():void\n\n\n  this.skipUnsignedExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():void\n\n\n  this.skipExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():uint\n\n\n  this.readUnsignedExpGolomb = function () {\n    var clz = this.skipLeadingZeros(); // :uint\n\n    return this.readBits(clz + 1) - 1;\n  }; // ():int\n\n\n  this.readExpGolomb = function () {\n    var valu = this.readUnsignedExpGolomb(); // :int\n\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n    }\n\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  }; // Some convenience functions\n  // :Boolean\n\n\n  this.readBoolean = function () {\n    return this.readBits(1) === 1;\n  }; // ():int\n\n\n  this.readUnsignedByte = function () {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar aacUtils = require('./utils'); // Constants\n\n\nvar _AacStream;\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\n\n_AacStream = function AacStream() {\n  var everything = new Uint8Array(),\n      timeStamp = 0;\n\n  _AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function (timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function (bytes) {\n    var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        } // check framesize\n\n\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n\n      byteIndex++;\n    }\n\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\n_AacStream.prototype = new Stream();\nmodule.exports = _AacStream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\n\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\n\nvar probe = require('./probe');\n\nvar inspect = require('../tools/mp4-inspector');\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar mapToSample = function mapToSample(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\n\n\nvar findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // Bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x06:\n        var data = avcStream.subarray(i + 1, i + 1 + length);\n        var matchingSample = mapToSample(i, samples);\n        seiNal = {\n          nalUnitType: 'sei_rbsp',\n          size: length,\n          data: data,\n          escapedRBSP: discardEmulationPreventionBytes(data),\n          trackId: trackId\n        };\n\n        if (matchingSample) {\n          seiNal.pts = matchingSample.pts;\n          seiNal.dts = matchingSample.dts;\n          lastMatchedSample = matchingSample;\n        } else {\n          // If a matching sample cannot be found, use the last\n          // sample's values as they should be as close as possible\n          seiNal.pts = lastMatchedSample.pts;\n          seiNal.dts = lastMatchedSample.dts;\n        }\n\n        result.push(seiNal);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n  truns.forEach(function (trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n    samples.forEach(function (sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n\n      sample.pts = currentDts + sample.compositionTimeOffset;\n      currentDts += sample.duration;\n    });\n    allSamples = allSamples.concat(samples);\n  });\n  return allSamples;\n};\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\n\n\nvar parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n  mdats.forEach(function (mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n  mdatTrafPairs.forEach(function (pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n    var baseMediaDecodeTime = tfdt.length > 0 ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals; // Only parse video data for the chosen video track\n\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n  return captionNals;\n};\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\n\n\nvar parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\n\n\nvar CaptionParser = function CaptionParser() {\n  var isInitialized = false;\n  var captionStream; // Stores segments seen before trackId and timescale are set\n\n  var segmentCache; // Stores video track ID of the track being parsed\n\n  var trackId; // Stores the timescale of the track being parsed\n\n  var timescale; // Stores captions parsed so far\n\n  var parsedCaptions;\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n\n  this.isInitialized = function () {\n    return isInitialized;\n  };\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n\n\n  this.init = function () {\n    captionStream = new CaptionStream();\n    isInitialized = true; // Collect dispatched captions\n\n    captionStream.on('data', function (event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n\n\n  this.isNewInit = function (videoTrackIds, timescales) {\n    if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n  };\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.parse = function (segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null; // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n      // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    } // Now that a timescale and trackId is set, parse cached segments\n\n\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n    this.flushStream();\n    return parsedCaptions;\n  };\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n\n\n  this.pushNals = function (nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function (nal) {\n      captionStream.push(nal);\n    });\n  };\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.flushStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n  /**\n    * Reset caption buckets for new data\n   **/\n\n\n  this.clearParsedCaptions = function () {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.resetCaptionStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.clearAllCaptions = function () {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n  /**\n    * Reset caption parser\n   **/\n\n\n  this.reset = function () {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar inspectMp4,\n    _textifyMp,\n    parseType = require('../mp4/probe').parseType,\n    parseMp4Date = function parseMp4Date(seconds) {\n  return new Date(seconds * 1000 - 2082844800000);\n},\n    parseSampleFlags = function parseSampleFlags(flags) {\n  return {\n    isLeading: (flags[0] & 0x0c) >>> 2,\n    dependsOn: flags[0] & 0x03,\n    isDependedOn: (flags[1] & 0xc0) >>> 6,\n    hasRedundancy: (flags[1] & 0x30) >>> 4,\n    paddingValue: (flags[1] & 0x0e) >>> 1,\n    isNonSyncSample: flags[1] & 0x01,\n    degradationPriority: flags[2] << 8 | flags[3]\n  };\n},\n    nalParse = function nalParse(avcStream) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n    }\n  }\n\n  return result;\n},\n    // registry of handlers for individual mp4 box types\nparse = {\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  avc1: function avc1(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      dataReferenceIndex: view.getUint16(6),\n      width: view.getUint16(24),\n      height: view.getUint16(26),\n      horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n      vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n      frameCount: view.getUint16(40),\n      depth: view.getUint16(74),\n      config: inspectMp4(data.subarray(78, data.byteLength))\n    };\n  },\n  avcC: function avcC(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      configurationVersion: data[0],\n      avcProfileIndication: data[1],\n      profileCompatibility: data[2],\n      avcLevelIndication: data[3],\n      lengthSizeMinusOne: data[4] & 0x03,\n      sps: [],\n      pps: []\n    },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i; // iterate past any SPSs\n\n    offset = 6;\n\n    for (i = 0; i < numOfSequenceParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    } // iterate past any PPSs\n\n\n    numOfPictureParameterSets = data[offset];\n    offset++;\n\n    for (i = 0; i < numOfPictureParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    }\n\n    return result;\n  },\n  btrt: function btrt(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      bufferSizeDB: view.getUint32(0),\n      maxBitrate: view.getUint32(4),\n      avgBitrate: view.getUint32(8)\n    };\n  },\n  esds: function esds(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      esId: data[6] << 8 | data[7],\n      streamPriority: data[8] & 0x1f,\n      decoderConfig: {\n        objectProfileIndication: data[11],\n        streamType: data[12] >>> 2 & 0x3f,\n        bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n        maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n        avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n        decoderConfigDescriptor: {\n          tag: data[24],\n          length: data[25],\n          audioObjectType: data[26] >>> 3 & 0x1f,\n          samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n          channelConfiguration: data[27] >>> 3 & 0x0f\n        }\n      }\n    };\n  },\n  ftyp: function ftyp(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      majorBrand: parseType(data.subarray(0, 4)),\n      minorVersion: view.getUint32(4),\n      compatibleBrands: []\n    },\n        i = 8;\n\n    while (i < data.byteLength) {\n      result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n      i += 4;\n    }\n\n    return result;\n  },\n  dinf: function dinf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  dref: function dref(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      dataReferences: inspectMp4(data.subarray(8))\n    };\n  },\n  hdlr: function hdlr(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      handlerType: parseType(data.subarray(8, 12)),\n      name: ''\n    },\n        i = 8; // parse out the name field\n\n    for (i = 24; i < data.byteLength; i++) {\n      if (data[i] === 0x00) {\n        // the name field is null-terminated\n        i++;\n        break;\n      }\n\n      result.name += String.fromCharCode(data[i]);\n    } // decode UTF-8 to javascript's internal representation\n    // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n    result.name = decodeURIComponent(escape(result.name));\n    return result;\n  },\n  mdat: function mdat(data) {\n    return {\n      byteLength: data.byteLength,\n      nals: nalParse(data)\n    };\n  },\n  mdhd: function mdhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      language: ''\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n    // each field is the packed difference between its ASCII value and 0x60\n\n    language = view.getUint16(i);\n    result.language += String.fromCharCode((language >> 10) + 0x60);\n    result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n    result.language += String.fromCharCode((language & 0x1f) + 0x60);\n    return result;\n  },\n  mdia: function mdia(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mfhd: function mfhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n  },\n  minf: function minf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  mp4a: function mp4a(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      // 6 bytes reserved\n      dataReferenceIndex: view.getUint16(6),\n      // 4 + 4 bytes reserved\n      channelcount: view.getUint16(16),\n      samplesize: view.getUint16(18),\n      // 2 bytes pre_defined\n      // 2 bytes reserved\n      samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n    }; // if there are more bytes to process, assume this is an ISO/IEC\n    // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n    if (data.byteLength > 28) {\n      result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n    }\n\n    return result;\n  },\n  moof: function moof(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  moov: function moov(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvex: function mvex(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvhd: function mvhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // convert fixed-point, base 16 back to a number\n\n    result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    i += 2 * 4;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    i += 6 * 4;\n    result.nextTrackId = view.getUint32(i);\n    return result;\n  },\n  pdin: function pdin(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      rate: view.getUint32(4),\n      initialDelay: view.getUint32(8)\n    };\n  },\n  sdtp: function sdtp(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        i;\n\n    for (i = 4; i < data.byteLength; i++) {\n      result.samples.push({\n        dependsOn: (data[i] & 0x30) >> 4,\n        isDependedOn: (data[i] & 0x0c) >> 2,\n        hasRedundancy: data[i] & 0x03\n      });\n    }\n\n    return result;\n  },\n  sidx: function sidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8),\n      earliestPresentationTime: view.getUint32(12),\n      firstOffset: view.getUint32(16)\n    },\n        referenceCount = view.getUint16(22),\n        i;\n\n    for (i = 24; referenceCount; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  },\n  smhd: function smhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      balance: data[4] + data[5] / 256\n    };\n  },\n  stbl: function stbl(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  stco: function stco(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      chunkOffsets: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 4, entryCount--) {\n      result.chunkOffsets.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stsc: function stsc(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleToChunks: []\n    },\n        i;\n\n    for (i = 8; entryCount; i += 12, entryCount--) {\n      result.sampleToChunks.push({\n        firstChunk: view.getUint32(i),\n        samplesPerChunk: view.getUint32(i + 4),\n        sampleDescriptionIndex: view.getUint32(i + 8)\n      });\n    }\n\n    return result;\n  },\n  stsd: function stsd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleDescriptions: inspectMp4(data.subarray(8))\n    };\n  },\n  stsz: function stsz(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleSize: view.getUint32(4),\n      entries: []\n    },\n        i;\n\n    for (i = 12; i < data.byteLength; i += 4) {\n      result.entries.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stts: function stts(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      timeToSamples: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 8, entryCount--) {\n      result.timeToSamples.push({\n        sampleCount: view.getUint32(i),\n        sampleDelta: view.getUint32(i + 4)\n      });\n    }\n\n    return result;\n  },\n  styp: function styp(data) {\n    return parse.ftyp(data);\n  },\n  tfdt: function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n    }\n\n    return result;\n  },\n  tfhd: function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  },\n  tkhd: function tkhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4;\n    i += 2 * 4;\n    result.layer = view.getUint16(i);\n    i += 2;\n    result.alternateGroup = view.getUint16(i);\n    i += 2; // convert fixed-point, base 16 back to a number\n\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    return result;\n  },\n  traf: function traf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trak: function trak(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trex: function trex(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4),\n      defaultSampleDescriptionIndex: view.getUint32(8),\n      defaultSampleDuration: view.getUint32(12),\n      defaultSampleSize: view.getUint32(16),\n      sampleDependsOn: data[20] & 0x03,\n      sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n      sampleHasRedundancy: (data[21] & 0x30) >> 4,\n      samplePaddingValue: (data[21] & 0x0e) >> 1,\n      sampleIsDifferenceSample: !!(data[21] & 0x01),\n      sampleDegradationPriority: view.getUint16(22)\n    };\n  },\n  trun: function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  },\n  'url ': function url(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n  },\n  vmhd: function vmhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      graphicsmode: view.getUint16(4),\n      opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n    };\n  }\n};\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\n\n\ninspectMp4 = function inspectMp4(data) {\n  var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n\n  for (var z = 0; z < data.length; ++z) {\n    v[z] = data[z];\n  }\n\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n    box = (parse[type] || function (data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n\n    box.size = size;\n    box.type = type; // store this box and move to the next\n\n    result.push(box);\n    i = end;\n  }\n\n  return result;\n};\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\n\n\n_textifyMp = function textifyMp4(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n  return inspectedMp4.map(function (box, index) {\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n    Object.keys(box).filter(function (key) {\n      return key !== 'type' && key !== 'boxes'; // output all the box properties\n    }).map(function (key) {\n      var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n      if (value instanceof Uint8Array || value instanceof Uint32Array) {\n        var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n          return ' ' + ('00' + _byte.toString(16)).slice(-2);\n        }).join('').match(/.{1,24}/g);\n\n        if (!bytes) {\n          return prefix + '<>';\n        }\n\n        if (bytes.length === 1) {\n          return prefix + '<' + bytes.join('').slice(1) + '>';\n        }\n\n        return prefix + '<\\n' + bytes.map(function (line) {\n          return indent + '  ' + line;\n        }).join('\\n') + '\\n' + indent + '  >';\n      } // stringify generic objects\n\n\n      return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n        if (index === 0) {\n          return line;\n        }\n\n        return indent + '  ' + line;\n      }).join('\\n');\n    }).join('\\n') + ( // recursively textify the child boxes\n    box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: _textifyMp,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function parsePid(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function parseAdaptionField(packet) {\n  var offset = 0; // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n\n  if ((packet[3] & 0x30) >>> 4 > 0x01) {\n    offset += packet[4] + 1;\n  }\n\n  return offset;\n};\n\nvar parseType = function parseType(packet, pmtPid) {\n  var pid = parsePid(packet);\n\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n\n  return null;\n};\n\nvar parsePat = function parsePat(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function parsePmt(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  } // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n\n\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n  var offset = 12 + programInfoLength;\n\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n\n  return programMapTable;\n};\n\nvar parsePesType = function parsePesType(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function parsePesTime(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n\n  ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n\n  if (ptsDtsFlags & 0xC0) {\n    pes = {}; // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n    pes.pts *= 4; // Left shift by 2\n\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n    pes.dts = pes.pts;\n\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n\n  return pes;\n};\n\nvar parseNalUnitType = function parseNalUnitType(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n\n    case 0x06:\n      return 'sei_rbsp';\n\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType; // advance the sync point to a NAL start, if necessary\n\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n      case 0:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0) {\n          frameI += 2;\n          break;\n        } else if (frameBuffer[frameI - 2] !== 0) {\n          frameI++;\n          break;\n        }\n\n        if (frameSyncPoint + 3 !== frameI - 2) {\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n        } // drop trailing zeroes\n\n\n        do {\n          frameI++;\n        } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      case 1:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n          frameI += 3;\n          break;\n        }\n\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        frameI += 3;\n        break;\n    }\n  }\n\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0; // parse the final nal\n\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","/** @license React v16.8.6\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    p = b ? Symbol.for(\"react.suspense\") : 60113,\n    q = b ? Symbol.for(\"react.memo\") : 60115,\n    r = b ? Symbol.for(\"react.lazy\") : 60116;\n\nfunction t(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case r:\n      case q:\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction v(a) {\n  return t(a) === m;\n}\n\nexports.typeOf = t;\nexports.AsyncMode = l;\nexports.ConcurrentMode = m;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = n;\nexports.Fragment = e;\nexports.Lazy = r;\nexports.Memo = q;\nexports.Portal = d;\nexports.Profiler = g;\nexports.StrictMode = f;\nexports.Suspense = p;\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || \"object\" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);\n};\n\nexports.isAsyncMode = function (a) {\n  return v(a) || t(a) === l;\n};\n\nexports.isConcurrentMode = v;\n\nexports.isContextConsumer = function (a) {\n  return t(a) === k;\n};\n\nexports.isContextProvider = function (a) {\n  return t(a) === h;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nexports.isForwardRef = function (a) {\n  return t(a) === n;\n};\n\nexports.isFragment = function (a) {\n  return t(a) === e;\n};\n\nexports.isLazy = function (a) {\n  return t(a) === r;\n};\n\nexports.isMemo = function (a) {\n  return t(a) === q;\n};\n\nexports.isPortal = function (a) {\n  return t(a) === d;\n};\n\nexports.isProfiler = function (a) {\n  return t(a) === g;\n};\n\nexports.isStrictMode = function (a) {\n  return t(a) === f;\n};\n\nexports.isSuspense = function (a) {\n  return t(a) === p;\n};"],"sourceRoot":""}